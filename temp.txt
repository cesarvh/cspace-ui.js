
> cspace-ui@1.0.0-rc.63 test /Users/cesarv.h/Documents/cspace/plugins/cspace-ui.js
> cross-env NODE_ENV=test karma start

Running locally.
â„¹ ï½¢wdmï½£: Hash: bfcc616d8c37f805c6aa
Version: webpack 3.12.0
Time: 44ms
â„¹ ï½¢wdmï½£: Compiled successfully.
â„¹ ï½¢wdmï½£: Compiling...
[33m26 03 2019 10:47:43.442:WARN [karma]: [39mNo captured browser, open http://localhost:9876/
â„¹ ï½¢wdmï½£: Hash: da9f563dbd971853c834
Version: webpack 3.12.0
Time: 29106ms
              Asset     Size  Chunks                    Chunk Names
test/specs/index.js  30.7 MB       0  [emitted]  [big]  test/specs/index
[1025] ./test/specs/index.js 109 bytes {0} [built]
[1026] ./test/specs \.spec\.jsx?$ 19.7 kB {0} [built]
[1027] ./test/specs/actions/account.spec.js 3.9 kB {0} [optional] [built]
[1909] ./test/specs/actions/authority.spec.js 5.84 kB {0} [optional] [built]
[1910] ./test/specs/actions/authz.spec.js 6.12 kB {0} [optional] [built]
[1911] ./test/specs/actions/batch.spec.js 11 kB {0} [optional] [built]
[1912] ./test/specs/actions/cspace.spec.js 8.47 kB {0} [optional] [built]
[1913] ./test/specs/actions/idGenerator.spec.js 7.42 kB {0} [optional] [built]
[1914] ./test/specs/actions/login.spec.js 9.8 kB {0} [optional] [built]
[1915] ./test/specs/actions/logout.spec.js 2.69 kB {0} [optional] [built]
[1916] ./test/specs/actions/notification.spec.js 7.33 kB {0} [optional] [built]
[1917] ./test/specs/actions/optionList.spec.js 1.11 kB {0} [optional] [built]
[1918] ./test/specs/actions/partialTermSearch.spec.js 8.61 kB {0} [optional] [built]
[1919] ./test/specs/actions/prefs.spec.js 12.2 kB {0} [optional] [built]
[1920] ./test/specs/actions/quickSearch.spec.js 3.09 kB {0} [optional] [built]
    + 2759 hidden modules
â„¹ ï½¢wdmï½£: Compiled successfully.
[32m26 03 2019 10:47:43.455:INFO [karma-server]: [39mKarma v3.1.4 server started at http://0.0.0.0:9876/
[32m26 03 2019 10:47:43.455:INFO [launcher]: [39mLaunching browsers Chrome with concurrency unlimited
[32m26 03 2019 10:47:43.564:INFO [launcher]: [39mStarting browser Chrome
[32m26 03 2019 10:47:45.276:INFO [Chrome 73.0.3683 (Mac OS X 10.14.0)]: [39mConnected on socket gPoVTCY-9oIu3NHkAAAA with id 25196476

START:
  account action creator
    checkForRoleUses
      âœ” should resolve to true if uses are found for the given role
      âœ” should resolve to false if no uses are found for the given role
    requestPasswordReset
      âœ” should request a password reset
    resetPassword
      âœ” should reset the password
  authority action creator
    readAuthVocabs
      âœ” should dispatch AUTH_VOCABS_READ_FULFILLED on success
      âœ” should dispatch AUTH_VOCABS_READ_FULFILLED if there are errors, but they are all 403
      âœ” should dispatch AUTH_VOCABS_READ_REJECTED on errors other than 403
    checkForUses
      âœ” should resolve to true if uses are found for the given authority item
      âœ” should resolve to false if no uses are found for the authority item
  authz action creator
    readPerms
      âœ” should dispatch PERMS_READ_FULFILLED on success
      âœ” should dispatch PERMS_READ_REJECTED on success
      âœ” should not dispatch any action if a read is already pending
      âœ” should not dispatch any action if permissions have already been retrieved
    readRoles
      âœ” should dispatch ROLES_READ_FULFILLED on success
      âœ” should dispatch ROLES_READ_REJECTED on success
      âœ” should not dispatch any action if a read is already pending
      âœ” should not dispatch any action if roles have already been retrieved
  batch action creator
    invoke
      âœ” should invoke a batch job for a single csid
      âœ” should invoke a batch job for list csids
      âœ” should invoke a batch job for no csid
      âœ” should send parameters
      âœ” should call the onValidationSuccess callback if parameter validation succeeds
      âœ” should not dispatch any actions when parameter validation fails
      âœ” should dispatch BATCH_INVOKE_FULFILLED when an invocation completes successfully
      âœ” should dispatch BATCH_INVOKE_REJECTED when an invocation fails
  cspace action creator
    configureCSpace
      âœ” should create a CSpace session and make it the active session
      âœ” should dispatch CSPACE_CONFIGURED, ACCOUNT_PERMS_READ_FULFILLED, PREFS_LOADED, and AUTH_VOCABS_READ_FULFILLED
      âœ” should resolve if the readAccountPerms query returns a 401 error
      âœ” should reject if the readAccountPerms query returns an error other than 401
      âœ” should configure an onError callback that is a function
    onError callback
      âœ” should reject with the error
      âœ” should dispatch RESET_LOGIN and OPEN_MODAL if the error is an invalid token 401 error
    createSession
      âœ” should return a cspace session
    setSession
      âœ” should create a CSPACE_CONFIGURED action
      âœ” should update the active session
  ID generator action creator
    addIDGenerators
      âœ” should create an ADD_ID_GENERATORS action
    readIDGenerator
      âœ” should dispatch READ_ID_GENERATOR_FULFILLED on success
      âœ” should dispatch READ_ID_GENERATOR_REJECTED on error
      âœ” should dispatch no action (null) when no csid is found for the ID generator name
    createID
      âœ” should dispatch CREATE_ID_FULFILLED on success
      âœ” should dispatch CREATE_ID_REJECTED on error
      âœ” should dispatch no action (null) when no csid is found for the ID generator name
  login action creator
    resetLogin
      âœ” should create a RESET_LOGIN action
    login
      âœ” should update the active session
      âœ” should dispatch LOGIN_FULFILLED on success
      âœ” should dispatch LOGIN_REJECTED on error
      âœ” should dispatch AUTH_RENEW_REJECTED with error code ERR_INVALID_CREDENTIALS when an invalid credentials error response is received
      âœ” should dispatch AUTH_RENEW_REJECTED with error code ERR_NETWORK when a network error occurs
      âœ” should dispatch AUTH_RENEW_REJECTED with error code ERR_WRONG_TENANT when the account tenant id is not the tenant id configured for the ui
    readAccountPerms
      âœ” should dispatch ACCOUNT_PERMS_READ_FULFILLED on success
      âœ” should dispatch ACCOUNT_PERMS_READ_REJECTED on error
  logout action creator
    logout
      âœ” should dispatch LOGOUT_FULFILLED on success
  notification action creator
    âœ” should open a new modal if a previous one has not been closed
    âœ” should still call the close callback of a modal that is replaced without closing
    âœ” should chain the onClose callback of a previously opened modal that has not been closed
    showNotification
      âœ” should create a SHOW_NOTIFICATION action
    removeNotification
      âœ” should create a REMOVE_NOTIFICATION action
    showValidationNotification
      âœ” should create a SHOW_NOTIFICATION action
    removeValidationNotification
      âœ” should create a REMOVE_NOTIFICATION action
    openModal
      âœ” should dispatch an OPEN_MODAL action
    closeModal
      âœ” should dispatch an CLOSE_MODAL action
      âœ” should call the callback specified in the last OPEN_MODAL call
  optionList action creator
    addOptionLists
      âœ” should create an ADD_OPTION_LISTS action
  partialTermSearch action creator
    addTerm
      âœ” should dispatch ADD_TERM_FULFILLED on success
      âœ” should clone the primary record data if clone is true
      âœ” should dispatch ADD_TERM_REJECTED on error
    findMatchingTerms
      âœ” should dispatch PARTIAL_TERM_SEARCH_FULFILLED on success
      âœ” should dispatch PARTIAL_TERM_SEARCH_REJECTED on error
      âœ” should dispatch no action if the vocabulary does not have a service path
    clearMatchedTerms
      âœ” should create a CLEAR_PARTIAL_TERM_SEARCH_RESULTS action
  prefs action creator
    collapsePanel
      âœ” should create a COLLAPSE_PANEL action
    setAdminTab
      âœ” should create a SET_ADMIN_TAB action
    setForm
      âœ” should create a SET_FORM action
    setUploadType
      âœ” should create a SET_UPLOAD_TYPE action
    setQuickSearchRecordType
      âœ” should create a SET_QUICK_SEARCH_RECORD_TYPE action
    setQuickSearchVocabulary
      âœ” should create a SET_QUICK_SEARCH_VOCABULARY action
    setRecordBrowserNavBarItems
      âœ” should create a SET_RECORD_BROWSER_NAV_BAR_ITEMS action
    setSearchPageRecordType
      âœ” should create a SET_SEARCH_PAGE_RECORD_TYPE action
    setSearchPageVocabulary
      âœ” should create a SET_SEARCH_PAGE_VOCABULARY action
    setSearchResultPagePageSize
      âœ” should create a SET_SEARCH_RESULT_PAGE_PAGE_SIZE action
    setSearchToRelatePagePageSize
      âœ” should create a SET_SEARCH_TO_RELATE_PAGE_SIZE action
    setSearchPanelPageSize
      âœ” should create a SET_SEARCH_PANEL_PAGE_SIZE action
    toggleRecordSidebar
      âœ” should create a TOGGLE_RECORD_SIDEBAR action
    loadPrefs
      âœ” should dispatch a PREFS_LOADED action
      âœ” should return null prefs if serialized prefs are not valid JSON
      âœ” should return null prefs if no serialized prefs exist in local storage
      âœ” should return null prefs if there is no username
      âœ” should merge user prefs into default prefs, if present
      âœ” should return default prefs if present and no serialized prefs exist in local storage
    savePrefs
      âœ” should save prefs to local storage
      âœ” should not save prefs if there is no username
      âœ” should not affect prefs for other users
      âœ” should overwrite existing prefs that are not valid JSON
  quick search action creator
    setQuickSearchKeyword
      âœ” should create a SET_QUICK_SEARCH_KEYWORD action
    initiateSearch
      âœ” should push a search result location onto history for authority records
      âœ” should push a search result location onto history for procedure records
      âœ” should push a record location onto history when a csid is entered as a keyword
  record action creator
    createNewRecord
      âœ” should dispatch CREATE_NEW_RECORD
      âœ” should read the record to be cloned
    createNewSubrecord
      âœ” should dispatch CREATE_NEW_SUBRECORD
      âœ” should read the record to be cloned
    detachSubrecord
      âœ” should return a DETACH_SUBRECORD action
    clearRecord
      âœ” should return a CLEAR_RECORD action
    readRecord
      for an object/procedure
        âœ” should dispatch RECORD_READ_FULFILLED on success
        âœ” should dispatch RECORD_READ_REJECTED on error
        âœ” should dispatch no actions if a read is already pending for the given csid
        âœ” should dispatch no actions if data is already available for the given csid
        âœ” should merge request configuration from the record type config
      for an authority
        âœ” should dispatch RECORD_READ_FULFILLED on success
      for a record with subrecords
        âœ” should dispatch SEARCH_STARTED and SEARCH_FULFILLED when a subrecord search is needed
        âœ” should dispatch SUBRECORD_READ_FULFILLED after reading the container record and subrecord
    saveRecord
      for an object/procedure
        âœ” should dispatch VALIDATION_FAILED if there are validation errors
        âœ” should dispatch RECORD_SAVE_FULFILLED on success
        âœ” should dispatch RECORD_SAVE_REJECTED on an update error
        âœ” should dispatch RECORD_SAVE_REJECTED on a create error
        âœ” should dispatch RECORD_SAVE_REJECTED if a create request does not return a 201 with a location
        âœ” should call the passed callback when a new record is saved
        âœ” should merge in a request config contribution from the record type config
      for an authority
        âœ” should dispatch RECORD_SAVE_FULFILLED on success
      for a record with subresource subrecords
        âœ” should dispatch RECORD_SAVE_FULFILLED on success
        âœ” should dispatch RECORD_SAVE_REJECTED if the subrecord save fails
        âœ” should dispatch SUBRECORD_CREATED if a subrecord is created
      for a record with field-referenced subrecords
        âœ” should dispatch RECORD_SAVE_FULFILLED on success
        âœ” should dispatch SUBRECORD_CREATED if a new subrecord is created
        âœ” should not save the subrecord if the configured save condition function returns false
      for a role
        âœ” should show a specific notification message for a duplicate role name error during a create
    revertRecord
      âœ” should dispatch REVERT_RECORD
    addFieldInstance
      âœ” should create an ADD_FIELD_INSTANCE action
    sortFieldInstances
      âœ” should create a SORT_FIELD_INSTANCES action
    deleteFieldValue
      âœ” should dispatch DELETE_FIELD_VALUE
    moveFieldValue
      âœ” should dispatch MOVE_FIELD_VALUE
    setFieldValue
      âœ” should dispatch SET_FIELD_VALUE
    transitionRecord
      for an object/procedure
        âœ” should dispatch RECORD_TRANSITION_FULFILLED on success
        âœ” should dispatch RECORD_TRANSITION_REJECTED on error
      for an authority
        âœ” should dispatch RECORD_SAVE_FULFILLED on success
    saveRecordWithTransition
      âœ” should dispatch saveRecord actions followed by transitionRecord actions
    deleteRecord
      for an object/procedure
        âœ” should dispatch RECORD_DELETE_FULFILLED on success
        âœ” should dispatch RECORD_DELETE_REJECTED on error
      for an authority
        âœ” should dispatch RECORD_DELETE_FULFILLED on success
    computeFieldValue
      âœ” should dispatch FIELD_COMPUTE_FULFILLED when field values are computed
      âœ” should dispatch FIELD_COMPUTE_REJECTED when there is an error computing field values
  record browser action creator
    clearRelatedRecordBrowserRelatedCsid
      âœ” should create a CLEAR_RELATED_RECORD_BROWSER_RELATED_CSID action
    setRelatedRecordBrowserRelatedCsid
      âœ” should create a SET_RELATED_RECORD_BROWSER_RELATED_CSID action
  record page action creator
    setRecordPagePrimaryCsid
      âœ” should create a SET_RECORD_PAGE_PRIMARY_CSID action
  relation action creator
    clearState
      âœ” should create a CLEAR_RELATION_STATE action
    find
      âœ” should dispatch RELATION_FIND_FULFILLED on success
      âœ” should dispatch RELATION_FIND_REJECTED on error
      âœ” should return null if a find result already exists for the descriptor
      âœ” should throw if neither object csid nor subject csid are supplied
    create
      âœ” should dispatch RELATION_SAVE_FULFILLED on success
      âœ” should dispatch RELATION_SAVE_REJECTED on error
    createBidirectional
      âœ” should dispatch RELATION_SAVE_FULFILLED twice, once in each direction
    batchCreate
      âœ” should dispatch RELATION_SAVE_FULFILLED once for each object
      âœ” should dispatch SHOW_NOTIFICATION on error
      âœ” should dispatch nothing for each object that is already related to the subject
    batchCreateBidirectional
      âœ” should dispatch RELATION_SAVE_FULFILLED twice for each object
      âœ” should dispatch SHOW_NOTIFICATION on error
      âœ” should dispatch nothing for each object that is already related to the subject
    deleteRelation
      âœ” should dispatch RELATION_DELETE_FULFILLED on success
      âœ” should dispatch RELATION_DELETE_REJECTED on error
      âœ” should throw if no csid is supplied
    unrelate
      âœ” should dispatch RELATION_DELETE_FULFILLED on success
      âœ” should dispatch RELATION_DELETE_REJECTED on error
      âœ” should find the relation if it is not already in the store
      âœ” should throw if object csid and subject csid are not both supplied
    unrelateBidirectional
      âœ” should dispatch RELATION_DELETE_FULFILLED twice, once for each direction
    batchUnrelate
      âœ” should dispatch RELATION_DELETE_FULFILLED once for each object
      âœ” should dispatch SHOW_NOTIFICATION on error
    batchUnrelateBidirectional
      âœ” should dispatch RELATION_DELETE_FULFILLED once for each object
      âœ” should dispatch SHOW_NOTIFICATION on error
    checkForRelations
      âœ” should resolve to true if relations are found for the given csid and predicate
      âœ” should resolve to false if no relations are found for the given csid and predicate
  report action creator
    invoke
      âœ” should invoke a report for a single csid
      âœ” should invoke a report for list csids
      âœ” should invoke a report for no csid
      âœ” should dispatch SHOW_NOTIFICATION with STATUS_ERROR when an invocation fails
    openReport
      âœ” should open a window with the URL of the report
      âœ” should include parameters
      âœ” should not call window.open if parameter validation fails
  search action creator
    search
      âœ” should dispatch SEARCH_FULFILLED on success
      âœ” should dispatch SET_MOST_RECENT_SEARCH when a search with a given descriptor is already pending
      âœ” should dispatch SET_MOST_RECENT_SEARCH when a search with a given descriptor already has a result
      âœ” should dispatch CREATE_EMPTY_SEARCH_RESULT on a related record query with empty csid
      âœ” should accept null/undefined vocabulary name
      âœ” should accept searches for subresources
      âœ” should generate the sort parameter
      âœ” should generate the sort parameter for descending searches
      âœ” should dispatch SEARCH_REJECTED when an unknown search column is specified
      âœ” should dispatch SEARCH_REJECTED when an invalid search order is specified
      âœ” should dispatch SEARCH_REJECTED on API error
      âœ” should dispatch SEARCH_REJECTED if the record type is unknown
      âœ” should dispatch SEARCH_REJECTED if the record type does not have a service path
      âœ” should dispatch SEARCH_REJECTED if the vocabulary does not have a service path
    setResultItemSelected
      âœ” should dispatch SET_RESULT_ITEM_SELECTED
    clearSearchResults
      âœ” should dispatch CLEAR_SEARCH_RESULTS
    setAllResultItemsSelected
      âœ” should dispatch SET_ALL_RESULT_ITEMS_SELECTED
    clearSelected
      âœ” should dispatch CLEAR_SELECTED
    deselectResultItem
      âœ” should dispatch DESELECT_RESULT_ITEM
  search page action creator
    setSearchPageAdvanced
      âœ” should create a SET_SEARCH_PAGE_ADVANCED action
    setSearchPageKeyword
      âœ” should create a SET_SEARCH_PAGE_KEYWORD action
    initiateSearch
      âœ” should push a search result location onto history for authority records
      âœ” should push a search result location onto history for procedure records
  search to relate action creator
    setSearchToRelateKeyword
      âœ” should create a SET_SEARCH_TO_RELATE_KEYWORD action
    setSearchToRelateAdvanced
      âœ” should create a SET_SEARCH_TO_RELATE_ADVANCED action
    setSearchToRelateRecordType
      âœ” should create a SET_SEARCH_TO_RELATE_RECORD_TYPE action
    setSearchToRelateVocabulary
      âœ” should create a SET_SEARCH_TO_RELATE_VOCABULARY action
  structured date action creator
    parseDisplayDate
      âœ” should resolve to an object containing a parsed structured date value
      âœ” should resolve to an object with isError set to true when the display date is not parseable
      âœ” should resolve to a structured date with all fields set to null when the display date is blank
  vocabulary action creator
    readVocabularyItems
      âœ” should dispatch READ_VOCABULARY_ITEMS_FULFILLED on success
      âœ” should dispatch READ_VOCABULARY_ITEMS_REJECTED on error
      âœ” should dispatch nothing if the vocabulary already has a pending read
      âœ” should dispatch nothing if the vocabulary already has items
    readVocabularyItemRefs
      âœ” should dispatch READ_VOCABULARY_ITEM_REFS_FULFILLED on success
      âœ” should dispatch READ_VOCABULARY_ITEM_REFS_REJECTED on error
      âœ” should dispatch nothing if the vocabulary already has a pending read
ERROR: '[React Intl] Missing message: "rootPage.title" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "logo.title" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "about.title" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "about.contentHTML" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "loginForm.username" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "loginForm.password" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "loginForm.title" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "loginForm.prompt" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "loginForm.forgotPassword" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "loginButton.label" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.feedbackUrl" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.appName" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.copyright" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.about" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.feedback" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.release" for locale: "en", using default message as fallback.'
ERROR: '[React Intl] Missing message: "footer.version" for locale: "en", using default message as fallback.'
  App
    âœ” should render
    âœ” should render a BrowserRouter if no router prop is supplied and prettyUrls is true
    âœ” should render a HashRouter if no router prop is supplied and prettyUrls is true
    âœ” should call openModal to confirm router navigation
  AccountSearchBar
    âœ” should render as a div
    âœ” should render an input containing the value
    âœ” should call onChange when the input value changes
    âœ” should set the value to empty string when the clear button is clicked
  AdminTabButtonBar
    âœ” should render as a div
    âœ” should render nothing if isCreatable is not true
  PermissionsInput
    âœ” should render as a div
    âœ” should call readPerms when mounted if resourceNames is not supplied
    âœ” should render a row of radio buttons for each resource name that is a known record type
    âœ” should sort record types by the configured sort order
    âœ” should sort record types by label when there is no sort order configured
    âœ” should check radio buttons corresponding to the supplied value
    âœ” should treat CRUDL on a delete workflow transition as D on the corresponding resource
    âœ” should allow a single (non-list) value
    âœ” should call onCommit when a radio button changes
    âœ” should convert delete permission to CRUL on a resource and CRUDL on its corresonding delete workflow
    âœ” should update permissions of authority items when permissions of authorities change
    âœ” should update permissions of the permissions resource when permissions of the roles resource change
    âœ” should remove permissions that are set to none
    âœ” should call onCommit when a header button is clicked
    for relations
      âœ” should set delete permissions on the resource and the delete workflow when delete is selected
      âœ” should set delete workflow to read only when delete is not selected
      âœ” should set no permissions on the resource and the delete workflow when none is selected
  RolesInput
    âœ” should render as a ul
    âœ” should call readRoles when mounted if roles is not supplied
    âœ” should render a checkbox for each role
    âœ” should check checkboxes for roles that appear in value
    âœ” should allow a single (non-list) value
    âœ” should not show roles that do not appear in the value if readOnly is true
    âœ” should render nothing if readOnly is true and no roles appear in the value
    âœ” should call onCommit when a checkbox changes
    âœ” should remove roles that are unchecked from the committed value
  VocabularySearchBar
    âœ” should render as a div
    âœ” should render an input containing the value
    âœ” should call onChange when the input value changes
    âœ” should set the value to empty string when the clear button is clicked
  VocabularyUsedByPanel
    âœ” should render a panel
    âœ” should render a list of uses
    âœ” should render a not used message if no uses are found
    âœ” should render nothing if no data is provided
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
  BatchModal
    âœ” should render a modal
    âœ” should render nothing if isOpen is false
    âœ” should render nothing if batchItem is not supplied
  InvocationEditor
    âœ” should render a RecordFormContainer if the invocable has a record type config
    âœ” should render a message if the invocable does not have a record type config
    âœ” should call createNewRecord when mounted
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
  ReportModal
    âœ” should render a modal
    âœ” should render nothing if isOpen is false
    âœ” should render nothing if reportItem is not supplied
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
    âœ” should render an unsaved warning if isRecordModified is true
  ReportingSearchBar
    âœ” should render as a div
    âœ” should render an input containing the value
    âœ” should call onChange when the input value changes
    âœ” should set the value to empty string when the clear button is clicked
  LoginForm
    âœ” should render as a div
    âœ” should render with correct class
    âœ” should show the header when showHeader is true
    âœ” should not show the header when showHeader is false
    âœ” should show pending message when isPending is true
    âœ” should show success message when isSuccess is true
    âœ” should show expired message when isExpired is true
    âœ” should show error message when error is provided
    âœ” should translate the bad credentials error
    âœ” should call login when the form is submitted
    âœ” should do nothing when the form is submitted if login is not set
    âœ” should call onSuccess when isSuccess changes from false to true
    âœ” should call focus the password input when the username changes from blank to non-blank
    âœ” should call focus the password input when error changes from falsy to truthy
    âœ” should update the location state of the reset password link when the username changes
    âœ” should show the forgot password link when showForgotLink is true
    âœ” should not show the forgot password link when showForgotLink is false
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
ERROR: 'Warning: react-modal: App element is not defined. Please use `Modal.setAppElement(el)` or set `appElement={el}`. This is needed so screen readers don't see main content when modal is opened. It is not recommended, but you can opt-out by setting `ariaHideApp={false}`.'
  LoginModal
    âœ” should render a modal
    âœ” should render nothing if isOpen is false
  LogoutIndicator
    âœ” should call onSuccess when isPending changes from true to false and a response exists
    when isPending is true
      âœ” should render as a div
      âœ” should show pending message
    when response exists
      âœ” should render as a div
      âœ” should show success message
    when error exists
      âœ” should render as a div
      âœ” should show error message
  BlobImage
    âœ” should render as an ImageContainer
    âœ” should insert the csid and derivative name into the img src url
  Image
    âœ” should render a div when mounted, then an img once the content has been read
    âœ” should retry reading the image when a 404 is received if retry is true
    âœ” should render a div when there is an error reading the image
    âœ” should clear previous content when the content path changes
    âœ” should render nothing if unmounted before the content is read
    âœ” should stop retrying reading the image if unmounted
  ImageViewer
    âœ” should render an OpenSeadragon viewer
[33m26 03 2019 10:47:56.902:WARN [web-server]: [39m404: /1234
    âœ” should destroy the OpenSeadragon viewer when unmounted
  MediaViewer
    âœ” should render a div
    âœ” should render an ImageGallery when there is a search result
    âœ” should render with empty class when the search result contains no items
    âœ” should render an ImageContainer for each carousel image
    âœ” should render an ImageContainer for each thumbnail image
    âœ” should render a MiniButton for each nav button
    âœ” should render nothing when the search is pending
    âœ” should not render thumbnails for a single search result
    âœ” should open a window when the carousel image is clicked
    âœ” should render the own blobCsid image first
  MediaViewerPanel
    âœ” should render as a Panel
[33m26 03 2019 10:47:56.952:WARN [web-server]: [39m404: /cspace-services/03794600-d98f-44a6-8985/content
[33m26 03 2019 10:47:56.954:WARN [web-server]: [39m404: /cspace-services/42e46bf9-f09d-49ec-8334/content
[33m26 03 2019 10:47:56.955:WARN [web-server]: [39m404: /cspace-services/8fdd5910-c579-4ed4-b52b/content
[33m26 03 2019 10:47:56.956:WARN [web-server]: [39m404: /cspace-services/03794600-d98f-44a6-8985/content
[33m26 03 2019 10:47:56.958:WARN [web-server]: [39m404: /cspace-services/42e46bf9-f09d-49ec-8334/content
[33m26 03 2019 10:47:56.959:WARN [web-server]: [39m404: /cspace-services/8fdd5910-c579-4ed4-b52b/content
[33m26 03 2019 10:47:56.960:WARN [web-server]: [39m404: /cspace-services/03794600-d98f-44a6-8985/content
[33m26 03 2019 10:47:56.962:WARN [web-server]: [39m404: /cspace-services/42e46bf9-f09d-49ec-8334/content
[33m26 03 2019 10:47:56.963:WARN [web-server]: [39m404: /cspace-services/8fdd5910-c579-4ed4-b52b/content
[33m26 03 2019 10:47:56.965:WARN [web-server]: [39m404: /cspace-services/03794600-d98f-44a6-8985/content
[33m26 03 2019 10:47:56.966:WARN [web-server]: [39m404: /cspace-services/42e46bf9-f09d-49ec-8334/content
[33m26 03 2019 10:47:56.968:WARN [web-server]: [39m404: /cspace-services/8fdd5910-c579-4ed4-b52b/content
    âœ” should include the number of related media records in the header
    âœ” should add one to the count if ownBlobCsid is provided
    âœ” should not add one to the count if ownBlobCsid is not a guid csid
    âœ” should call search when mounted
    âœ” should call search when a new search descriptor is supplied
  BackButton
    âœ” should render a button
  CancelButton
    âœ” should render a button
  CsidLink
    âœ” should render as a SearchResultLink
  NavBar
    âœ” should render as a nav
    âœ” should render with correct class
  NavLink
    âœ” should render as an a
    âœ” should render with correct class
  Notification
    âœ” should render as a div
    âœ” should call close when the close button is clicked
    âœ” should call close automatically after the autoCloseTime timeout when autoClose is true
    âœ” should call close automatically after the autoCloseTime timeout when autoClose is changed from false to true
    âœ” should cancel auto close when the close button is focused
    âœ” should cancel auto close when the mouse is depressed on the notification
    âœ” should render a timestamp if date is provided
    âœ” should render children prop as the content if provided
  NotificationBar
    âœ” should render as a div
    âœ” should render a notification for each supplied notification descriptor
  ValidationErrorMessage
    âœ” should render as a ul
    âœ” should render the full name of a field if present
    âœ” should fall back to the name of a field if full name is not present
    âœ” should fall back to the id of a field if neither full name nor name are present
    âœ” should render a list item for each error
    âœ” should render nothing if there are no errors
  ValidationErrorNotification
    âœ” should render as a Notification containing a ValidationErrorMessage child
    âœ” should render nothing if no errors are provided
  AccountPage
    âœ” should render as a div
    âœ” should call setAdminTab when mounted
    âœ” should render a record editor when a csid param exists in the match
    âœ” should replace history with a new location to clone a record
    âœ” should replace history with a new location when the create new button is clicked
    âœ” should replace history with a new location when a record is created
    âœ” should replace history with a new location when a user deletion completes
    âœ” should replace history with a new location when an item is clicked in the search panel
    âœ” should not replace history when an item is clicked in the search panel but there are not read permissions on accounts
    âœ” should update the search descriptor's sequence ID when a record is saved in the record editor
    âœ” should update the search descriptor when the search bar value changes
    âœ” should only update the search descriptor once when the search bar value changes twice within the filter delay
    âœ” should update the search descriptor immediately when the search bar value is blanked
    âœ” should not show a record editor delete button if the open record is the currently logged in user
  AdminPage
    âœ” should render as a div
    âœ” should render nothing if no tabs are permitted
    âœ” should not render tabs for which list permissions do not exist
  AuthRolePage
    âœ” should render as a div
    âœ” should call setAdminTab when mounted
    âœ” should render a record editor when a csid param exists in the match
    âœ” should replace history with a new location to clone a record
    âœ” should replace history with a new location when the create new button is clicked
    âœ” should replace history with a new location when a record is created
    âœ” should replace history with a new location when a role deletion completes
    âœ” should replace history with a new location when an item is clicked in the search panel
    âœ” should not replace history when an item is clicked in the search panel but there are not read permissions on roles
    âœ” should update the search descriptor's sequence ID when a record is saved in the record editor
LOG: Object{}
  ConfigPage
    âœ” should render a link to a blob
LOG: Object{}
    âœ” should revoke the blob url when unmounted
  ContentViewerPage
    âœ” should render nothing when mounted, then an iframe once the content has been read
    âœ” should render an ImageViewer if the content is an image
    âœ” should render nothing if imagePath is not present in match params
    âœ” should clear previous content when the content path changes
    âœ” should render nothing if unmounted before the content is read
    âœ” should call renderError to render an error when reading the content fails
  CreatePage
    âœ” should render as a div
    âœ” should render a link for each object/procedure record, and for each vocabulary
    âœ” should not render links for disabled procedures
    âœ” should not render links for disabled vocabularies
    âœ” should not render links for locked vocabularies
    âœ” should not render links for vocabularies with no workflow state
    âœ” should not render links for authority records whose vocabularies are all disabled
    âœ” should sort procedures/vocabularies by sortOrder if present
    âœ” should not render service types whose record types are all disabled
  DashboardPage
    âœ” should render as a div
    âœ” should render a search panel
    âœ” should update the search descriptor when it is changed by the search panel
  ErrorPage
    âœ” should render as a div
    âœ” should render a not found message for an http error with status 404
    âœ” should render a not allowed message for an http error with status 401
  LoginPage
    âœ” should render as a div
    âœ” should call onMount when mounted
    âœ” should call closeModal and resetLogin, and replace history with continuation when login succeeds
  LogoutPage
    âœ” should render as a div
    âœ” should call logout when mounted
    âœ” should call resetLogin and replace history with continuation when logout succeeds
  ProtectedPage
    âœ” should render as a div
    âœ” should render the content
    âœ” should render a header containing a user menu
ERROR: 'Warning: Failed prop type: The prop `intl` is marked as required in `Footer`, but its value is `undefined`.
    in Footer'
    âœ” should render a login modal
    âœ” should render a login modal 
    âœ” should when login succeeds
  PublicPage
    âœ” should render as a div
    âœ” should render the content
  RecordPage
    âœ” should render as a div
[33m26 03 2019 10:48:04.078:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.079:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.080:WARN [web-server]: [39m404: /cspace-services/collectionobjects/1d075e7f-82b4-4ca9-9ab6?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.082:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.082:WARN [web-server]: [39m404: /cspace-services/collectionobjects/1d075e7f-82b4-4ca9-9ab6?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.084:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.085:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.086:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.087:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
    âœ” should render with correct class
    âœ” should render nothing if record type is 'all'
    âœ” should render nothing if vocabulary is 'all'
    âœ” should render an error page if an error is supplied
    âœ” should replace history with the record type determined from data when the record type is 'all', and data is supplied
    for an object/procedure record
      âœ” should call readRecord when mounted if a csid is provided
      âœ” should call setRecordPagePrimaryCsid when mounted
      âœ” should not call readRecord if the record type is unknown
      âœ” should call readRecord when new params are passed via props
      âœ” should call readRecord when new params are passed via props 
      âœ” should call setRecordPagePrimaryCsid with undefined csid when unmounted
      âœ” should render a RecordTitleBarContainer with correct csid and recordType
      âœ” should render a RecordBrowser with correct csid and recordType
      âœ” should use empty csid if csid is null
[33m26 03 2019 10:48:04.136:WARN [web-server]: [39m404: /cspace-services/collectionobjects/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
[33m26 03 2019 10:48:04.137:WARN [web-server]: [39m404: /cspace-services/authorities/local/items/b09295cf-ff56-4018-be16?wf_deleted=false&showRelations=true
      âœ” should replace history with a related record URL when a related record tab is clicked
    for an authority record
      âœ” should call readRecord when mounted if a csid is provided
      âœ” should not call readRecord if the vocabulary is unknown
  ReportViewerPage
    âœ” should render a ContentViewerPage
    âœ” should render a loading message
    âœ” should render an error message
  ReportingPage
    âœ” should render as a div
    âœ” should render a record editor when a csid param exists in the match
    âœ” should replace history with a new location when an item is clicked in the search panel
    âœ” should not render any reports if the user has no permission to run reports
    âœ– should update the search descriptor's sequence ID when a record is saved in the record editor
LOG: '-=====s====>'
LOG: Map{size: 2, _root: ArrayMapNode{ownerID: undefined, entries: [..., ...]}, __ownerID: undefined, __hash: undefined, __altered: false}
LOG: '-====e=====>'
    âœ” should update the search descriptor when the search bar value changes
  ResetPasswordPage
    âœ” should render as a div
    âœ” should render a PasswordResetRequestForm if no token exists in params
    âœ” should render a PasswordResetForm if a token exists in query parameters
  RootPage
    âœ” should render as a div
  SearchPage
    âœ” should render as a div
    âœ” should render an error page if the record type is unknown
    âœ” should replace history with the recordTypeValue prop if no record type is supplied in params
    âœ” should replace history with the recordTypeValue prop if no record type is supplied in updated params
    âœ” should replace history with the vocabularyValue prop if no vocabulary is supplied in params
    âœ” should replace history when the record type is committed
    âœ” should call onRecordTypeCommit when the record type is committed
    âœ” should call onRecordTypeCommit when a new record type is selected via params
    âœ” should replace history when the vocabulary is committed
    âœ” should call onVocabularyCommit when the vocabulary is committed
    âœ” should call onVocabularyCommit when a new vocabulary is selected via params
  SearchResultPage
    âœ” should render as a div
    âœ” should not render a result table if the record type is unknown
    âœ” should not render a result table if the vocabulary is unknown
    âœ” should not render a result table if the subresource is unknown
    âœ” should normalize query parameters
    âœ” should call setPreferredPageSize with the normalized page size
    âœ” should call search to perform a search
    âœ” should handle table sort changes
    âœ” should render a related query title
    âœ” should render a vocabulary title
    âœ” should render a subresource title
    âœ” should render a search to relate modal if the search record type is object an object or procedure
    âœ” should generate search to relate subjects from selected items
    âœ” should return null subjects if selected items is undefined
    âœ” should close the search to relate modal when relations have been created
    âœ” should close the search to relate modal when the close button is clicked
    âœ” should close the search to relate modal when the cancel button is clicked
    âœ” should call onItemSelectChange when a checkbox is clicked
    âœ” should stop propagation of clicks on checkboxes
    âœ” should not render checkboxes on items that are locked
    renderHeader
      âœ” should render the search result header
      âœ” should render a pending message if the search result does not have a total items count
      âœ” should render an error message if the search has an error
      âœ” should connect page size change events to a handler
      âœ” should call setSearchPageKeyword when the edit link is clicked
ERROR: 'Warning: No field descriptor found for the record type collectionobject. The field with path document,ns2:path,foo will not be rendered.'
      âœ” should call setSearchPageAdvanced when the edit link is clicked
    renderFooter
      âœ” should render the search result footer
      âœ” should connect page select events to a handler
  VocabularyPage
    âœ” should render as a div
    âœ” should call setAdminTab when mounted
    âœ” should render a record editor when a csid param exists in the match
    âœ” should replace history with a new location when an item is clicked in the search panel
    âœ” should not replace history when an item is clicked in the search panel but there are not read permissions on vocabularies
    âœ” should call readVocabularyItemRefs when a record read completes in the record editor
    âœ” should update the search descriptor's sequence ID when a record is saved in the record editor
    âœ” should update the search descriptor when the search bar value changes
    âœ” should only update the search descriptor once when the search bar value changes twice within the filter delay
    âœ” should update the search descriptor immediately when the search bar value is blanked
  CheckboxInput
    âœ” should render a cspace-input CheckboxInput
    âœ” should supply labels to the base component
    âœ” should supply a custom transition map to the base input of viewType is 'search'
  CloneButton
    âœ” should render a button
    âœ” should render nothing if isCloneable is false
  ConfirmRecordDeleteModal
    âœ” should render a modal
    âœ” should render nothing if isOpen is false
    âœ” should render nothing if data is not supplied
    âœ” should render a prompt message containing the record title
    âœ” should render a warning message and no prompt when the record data contains hierarchy relations
    âœ” should not render a delete button when the record data contains hierarchy relations
    when the record type is a procedure or object
      âœ” should call checkForRelations when opened, and render a warning message if it resolves to true
    when the record type is an authority
      âœ” should call checkForUses when opened, and render a message if it resolves to true
    when the record type is authrole
      âœ” should call checkForRoleUses when opened, and render a message if it resolves to true
  ConfirmRecordUnrelateModal
    âœ” should render a modal
    âœ” should render nothing if isOpen is false
    âœ” should render nothing if isMultiSelect is false and data is not supplied
    âœ” should render nothing if isMultiSelect is true and recordCount is zero
    âœ” should render a prompt message containing the record title
    âœ” should render a prompt message containing the record count if isMultiSelect is true
    âœ” should render an unrelating message if isUnrelating is true
  ContentViewer
    âœ” should render a link containing an img
    âœ” should render a link containing an img for an authority record type
ERROR: 'Warning: No content descriptor found for the record type foo. The content viewer will not be rendered.'
    âœ” should render nothing if content is not configured for the record type
    âœ” should render nothing if no csid is present in context
ERROR: 'Warning: No content descriptor found for the record type oh no. The content viewer will not be rendered.'
    âœ” should render nothing for an unknown record type
  DeprecateButton
    âœ” should render a button
    âœ” should render nothing if isDeprecatable is false
    âœ” should be disabled if isModified is true
    âœ” should be disabled if isSavePending is true
  ErrorBadge
    âœ” should render a button
    âœ” should pass provided props to the button
  Field
    âœ” should render an element with type and props specified in config
    âœ” should pass props to the base component
    âœ” should set repeating on the base component if the field is repeating
    âœ” should set label on the base component if it is an accepted prop of the base component
    âœ” should set readOnly prop of the label if the field is configured to be read only
    âœ” should set required prop of the label if the field is configured to be required
    âœ” should set label to null on the base component if no message is found
    âœ” should set formatValue on the base component if it is an accepted prop of the base component and a value message is present
    âœ” should set renderChildInputLabel on the base component if it is an accepted prop of the base component
    âœ” should set viewType on the base component if it is an accepted prop of the base component
    âœ” should not pass props to the base component that it does not accept
ERROR: 'Warning: No field descriptor found for the record type oops. The field with path color will not be rendered.'
    âœ” should render nothing if the record type is not configured
ERROR: 'Warning: The path oops is not present in the field descriptors for the record type collectionobject. The field will not be rendered.'
    âœ” should render nothing if the field is not configured
  HierarchyInput
    âœ” should render a hierarchy editor
    âœ” should not render a hierarchy editor if both showParent and showChildren are false
    âœ” should render a hierarchy sibling list
    âœ” should not render a hierarchy sibling list if showSiblings is false
    âœ” should convert a relation list to a hierarchy descriptor, and pass it to the hierarchy editor
    âœ” should find broader relations using a urn-style csid
    âœ” should accept a single-item (non-list) relation
    âœ” should render no hierarchy when non-immutable relations are supplied
    âœ” should pass a new hierarchy descriptor to the hierarchy editor when a new relation list is received via props
    âœ” should sort children by display name, with nulls at the end
    âœ” should call onCommit when a value is committed in the hierarchy editor
    âœ” should call onCommit when a child instance is removed in the hierarchy editor
    âœ” should call onCommit when a child instance is added in the hierarchy editor
    âœ” should commit two children when a child instance is added in the hierarchy editor and there are no children
  HierarchyReparentNotifier
    âœ” should render nothing
    when mounted
      âœ” should call readRecord for each non-blank refName in childData
      âœ” should not call readRecord for children whose ref names do not map to known record types and vocabularies
      âœ” should call showNotification with an item for each child that is being reparented
    when props are updated
      âœ” should call readRecord for each new non-blank refName in childData
      âœ” should call removeNotification if no items are being reparented
  HierarchySiblingList
    âœ” should render as a div
    âœ” should render a header with the supplied title
    âœ” should render a header with the supplied title 
    âœ” should call findRelations when mounted
    âœ” should call findRelations when parentCsid is changed
    âœ” should render a link for each item in the result set
    âœ” should render one input for a single item (non-list) result set
  InputTable
    âœ” should render a cspace-input InputTable
    âœ” should set the label prop on the base InputTable
    âœ” should set the renderLabel prop on the base InputTable
    âœ” should set readOnly to true on field labels for child inputs that are configured as read only
    âœ” should set required to true on field labels for child inputs that configured as required
  MediaSnapshotPanel
    âœ” should render a media viewer panel
    âœ” should rerender with a new search descriptor when a new csid is supplied via props
    âœ” should render nothing if the record data has not been saved
    âœ” should set the ownBlobCsid prop when the record is a media record
  MiniView
    âœ” should render as a div
    âœ” should call readRecord when mounted if a csid is supplied
    âœ” should call readRecord when when a new csid is supplied via props
    âœ” should render a RecordForm
    âœ” should render a read only RecordForm using the 'mini' form
    âœ” should render the record title, linked to the record page
    âœ” should render a <br> for the title if the computed title is empty
  MiniViewPopup
    âœ” should render a Popup containing a MiniView
  MiniViewPopupAutocompleteInput
    âœ” should render as a div
    âœ” should not render an input if asText is true
[33m26 03 2019 10:48:08.712:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(JohnDoe1514784052823)?wf_deleted=false
    âœ” should open the popup when the mouse enters
    âœ” should not open the popup if the value not parseable as a ref name
    âœ” should not open the popup if read permissions do not exist for the record type
[33m26 03 2019 10:48:10.844:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(JohnDoe1514784052823)?wf_deleted=false
    âœ” should close the popup when the mouse leaves
[33m26 03 2019 10:48:12.256:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(JohnDoe1514784052823)?wf_deleted=false
    âœ” should close the popup when a new value is supplied via props
[33m26 03 2019 10:48:12.978:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(SamuelSmith)?wf_deleted=false
    when the filtering dropdown is open
      âœ” should open the popup when the mouse enters a menu item
[33m26 03 2019 10:48:13.696:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(SamuelSmith)?wf_deleted=false
      âœ” should close the popup when the mouse leaves a menu item
[33m26 03 2019 10:48:15.108:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(SamuelSmith)?wf_deleted=false
      âœ” should close the popup if the mouse enters the popup immediately after it leaves a menu item
[33m26 03 2019 10:48:16.529:WARN [web-server]: [39m404: /cspace-services/personauthorities/urn:cspace:name(SamuelSmith)?wf_deleted=false
      âœ” should close the popup when the filtering dropdown closes
  OptionPickerInput
    âœ” should render a DropdownMenuInput
    âœ” should call intl.formatMessage to format the status message
    âœ” should call intl.formatMessage to format option labels
  RecordBatchPanel
    âœ” should render a div containing a search panel and a batch modal
    âœ” should render a nothing if list permission on batch does not exist
    âœ” should render a nothing if the record has not been saved
    âœ” should update the search panel's search descriptor when the record type changes
    âœ” should close the batch modal when the cancel button is clicked
    âœ” should close the batch modal when the close button is clicked
    âœ” should call run and close the modal when the run button is clicked in the batch modal and the selected batch job does not create new focus
    âœ” should call run and set isRunning to true when the run button is clicked in the batch modal and the selected batch job creates new focus
    âœ” should close the modal, set isRunning to false, and navigate to the new focus when a batch job that creates new focus completes
    âœ” should update the search panel when it changes the search descriptor
  RecordBrowser
    âœ” should render as a div
    âœ” should render a RecordBrowserNavBar
    âœ” should render a RecordEditor if a relatedRecordType prop is not supplied
    âœ” should replace history after a new record has been created
    âœ” should push a location onto history to clone a record
    âœ” should render a RelatedRecordBrowser if a relatedRecordType prop is supplied
    âœ” should call clearPreferredRelatedCsid when unmounted
    âœ” should call clearPreferredRelatedCsid when a new csid is supplied via props
    âœ” should replace the history location with the index location when a record is soft-deleted and there is no search state
    âœ” should replace the history location with a search result page location when a record is soft-deleted and there is a search state
  RecordBrowserNavBar
    âœ” should render as a nav
    âœ” should render a primary item and a related record selector
    âœ” should render a list item for each entry in items
    âœ” should not show related items when no csid is supplied
    âœ” should not show related items when the supplied record type is an authority
    âœ” should call setItems when the selected related record type is not in items
    âœ” should call onSelect when a related record item button is clicked
    âœ” should call setItems when a related record item close button is clicked
    âœ” should call onSelect with the following item when the close button is clicked on the active related record item
    âœ” should call onSelect with the preceding item when the close button is clicked on the active related record item, and it is the last related record item
    âœ” should call setItems when a selection is made in the related record selector
    âœ” should call onSelect when a selection is made in the related record selector
  RecordButtonBar
    âœ” should render as a div
    âœ” should render with correct class
    âœ” should vary the save button class depending on isModified prop
    âœ” should disable the save button when isSavePending is true
    âœ” should call onSaveButtonClick when the save button is clicked
    âœ” should show the clone button when a csid is provided
  RecordEditor
    âœ” should render as a form
    âœ” should render with correct class
    âœ” should render nothing for an unknown record type
    âœ” should render the 'default' form if no formName is supplied, and no default form is configured
    âœ” should render the configured default form if no formName is supplied
    âœ” should call readRecord when mounted if a csid is provided
    âœ” should call onRecordReadComplete when the record has been read
    âœ” should call createNewRecord when mounted if a csid is not provided
    âœ” should call readRecord when the csid is changed
    âœ” should call removeValidationNotification and removeNotification when unmounted
    âœ” should call removeValidationNotification when the csid is changed
    âœ” should call save followed by onRecordSaved when the save button is clicked
    âœ” should call the record type's configured onRecordSaved handler following save
    âœ” should call saveWithTransition when the save button is clicked if lockOnSave is true for the record type
    âœ” should call revert when the revert button is clicked
    âœ” should call clone when the clone button is clicked
    âœ” should call openModal when the delete button is clicked
    âœ” should call openModal when the save button is clicked on a locking record
    âœ” should call validateRecordData when the save button error badge is clicked
    âœ” should call validateRecordData when the save button error badge is clicked 
    âœ” should call setForm when a value is committed in the form selector
    âœ” should call save and closeModal when the confirmation modal save button is clicked
    âœ” should call revert and closeModal when the confirmation modal revert button is clicked
    âœ” should call closeModal and onSaveCancelled when the confirmation modal cancel button is clicked
    âœ” should call save and closeModal when the lock modal save button is clicked
    âœ” should call saveWithTransition and closeModal when the lock modal save and lock button is clicked
    âœ” should call transitionRecord when the deprecate button is clicked
    âœ” should call transitionRecord when the undeprecate button is clicked
    when isHardDelete is true
      âœ” should call deleteRecord, closeModal, and onRecordDeleted when the delete modal delete button is clicked
    when isHardDelete is false
      âœ” should call transitionRecord, closeModal, and onRecordTransitioned when the delete modal delete button is clicked
  RecordForm
    âœ” should render a div
    âœ” should render nothing for an unknown record type
    âœ” should render the specified form template
    âœ” should resolve a computed form template
    âœ” should render nothing if a computed form returns no form name
    âœ” should render the element if a computed form returns a React element
    âœ” should render the data into the form template
  RecordFormSelector
    âœ” should render as a div
    âœ” should render with correct class
    âœ” should render nothing if there are no forms configured for the record type
    âœ” should render nothing if only one form is enabled for the record type
    âœ” should render a dropdown menu with an option for each form
    âœ” should sort options by sortOrder
  RecordHeader
    âœ” should render as a div
  RecordHistory
    âœ” should render a popover when both updated and created information are supplied
    âœ” should render no content when neither created nor updated information is supplied
    âœ” should render a span if isModified is true, and neither updated nor created times are supplied
    âœ” should render a span if isSavePending is true, and neither updated nor created times are supplied
    âœ” should omit 'by...' if no user is supplied
    âœ” should include a save pending message when isSavePending is true
    âœ” should include a record modified message when isModified is true
    âœ” should not render the header content when opened
    âœ” should rerender the header content when closed
  RecordReportPanel
    âœ” should render a div containing a search panel and a report modal
    âœ” should render a nothing if the record has not been saved
    âœ” should render nothing if list permission on report does not exist
    âœ” should update the search panel's search descriptor when the record type changes
    âœ” should close the report modal when the cancel button is clicked
    âœ” should close the report modal when the close button is clicked
    âœ” should call openReport when the run button is clicked in the report modal
    âœ” should update the search panel when it changes the search descriptor
  RecordSidebar
    âœ” should render nothing if the record type is unknown
    âœ” should render nothing if isOpen is false
  RecordTitleBar
    âœ” should render as a header
    âœ” should render with correct class
    âœ” should render the record title and record type name
    âœ” should render the vocabulary name
    âœ” should render nothing if a plugin is not found for the record type
    âœ” should dock and undock when scrolled
    âœ” should call onDock if the height changes while docked
    âœ” should render a search result traverser as the title bar navigation if a search descriptor is supplied
    âœ” should add and remove window scroll listeners when mounted and unmounted
  RecordTypesProvider
    âœ” should provide record plugins in context
  RelatedRecordBrowser
    âœ” should render as a div
    âœ” should render a relation editor if a related csid is provided
    âœ” should replace history when a related csid is not provided but a preferred related csid is provided
    âœ” should replace history when the clone button is clicked
    âœ” should replace history when the create new button is clicked
    âœ” should call onShowRelated when a related record list item is clicked
    âœ” should replace history when a new related record is created
    âœ” should show the search to relate modal when the relate button is clicked
    âœ” should close the search to relate modal when the close button is clicked
    âœ” should close the search to relate modal when the cancel button is clicked
    âœ” should close the search to relate modal when relations have been created
    âœ” should replace history when the related record is unrelated in the related record panel
    âœ” should call deselect when a record is unrelated in the relation editor
    âœ” should replace history when the relation editor is closed
    âœ” should call setPreferredRelatedCsid when the related csid is changed via props
    âœ” should call setPreferredRelatedCsid when the relation editor is closed
  RelatedRecordButtonBar
    âœ” should render as a div
    âœ” should render nothing when isRelatable is false
  RelatedRecordPanel
    âœ” should render a search panel
    âœ” should render nothing if list permission is not present for the related record type
    âœ” should render a select bar in the panel header if showCheckboxColumn is true
    âœ” should not render a select bar in the panel header if showCheckboxColumn is false
    âœ” should render nothing if the record data does not contain updatedAt
    âœ” should rerender with the new search descriptor when it is changed within the search panel
    âœ” should rerender with a new search descriptor when a new csid is supplied via props
    âœ” should maintain the page number, size, and sort when only recordRelationUpdatedTimestamp is changed
    âœ” should render checkboxes as checked for selected items
    âœ” should not render checkboxes for locked items
    âœ” should call onItemSelectChange when a checkbox value is changed
    âœ” should stop event propagation when a checkbox is clicked
    âœ” should call openModal when the unrelate button is clicked
    âœ” should call unrelateRecords followed by clearSelected, onUnrelated, and closeModal when the confirm unrelate button is clicked
    âœ” should set unrelate modal isUnrelating prop to true while unrelating is in progress
    âœ” should set unrelate modal isUnrelating prop back to false if unrelating fails
    âœ” should call closeModal when the cancel button is clicked in the confirm unrelate modal
  RelationEditor
    âœ” should render a record editor if the relation is found
    âœ” should render nothing if there is no relation find result
    âœ” should render an error message div if the relation find result contains no items
    âœ” should render an error message div if an object error is provided
    âœ” should call createRelation followed by onRecordCreated when a record is created
    âœ” should return null when a record create is attempted but no createRelation prop is supplied
    âœ” should call onRecordTransitioned when a record is transitioned
    âœ” should call onClose when a record is transitioned with transition name 'delete'
    âœ” should call findRelation when mounted
    âœ” should call findRelation when subject, object, or predicate changes
    âœ” should call onUnmount when unmounted
    âœ” should call onClose when the cancel button is clicked in the button bar
    âœ” should call onClose when the close button is clicked in the button bar
    âœ” should call openModal when the unrelate button is clicked
    âœ” should call closeModal and onClose, then unrelate and onUnrelated when unmounted when the confirm unrelate button is clicked
    âœ” should not call unrelate when unmounted if navigation is cancelled following the unrelate button being clicked
    âœ” should call closeModal when the cancel button is clicked in the confirm unrelate modal
  RevertButton
    âœ” should render a button
    âœ” should render nothing if readOnly is true
    âœ” should render the supplied label
    âœ” should be disabled if isModified is false
    âœ” should be disabled if isSavePending is true
  RunButton
    âœ” should render a button only when the record type is an invocable
    âœ” should not render a button if the record type is not an invocable
  SaveButton
    âœ” should render nothing when readOnly is true
    without validation errors
      âœ” should render a button
      âœ” should apply the pending class if isSavePending is true
      âœ” should apply the pending class if isSavePending is true 
      âœ” should apply the normal class if isSavePending is true
      âœ” should apply the done class if isSavePending and isModified are both false
    with validation errors
      âœ” should render a div with a save button and an error badge
      âœ” should render a disabled save button
  StructuredDateInput
    âœ” should render a cspace-input StructuredDateInput
    âœ” should call readTerms when mounted
    âœ” should call readTerms when new perms are supplied via props
    âœ” should call intl.formatMessage to format field labels
    âœ” should call intl.formatMessage to format option labels
    âœ” should use the option value as the label for an option that does not have a message
    âœ” should call intl.formatMessage to format the parse failed message
  Subrecord
    âœ” should render a SubrecordEditorContainer
ERROR: 'Warning: No subrecord is configured with name badName for the record type person.'
    âœ” should render nothing if the named subrecord is not configured for the record type
  SubrecordDetachButton
    âœ” should render a button
  SubrecordEditor
    âœ” should render a RecordFormContainer
    âœ” should render nothing if read permission does not exist for the record type
    âœ” should render a SubrecordDetachButton when showDetachButton is true and the data represents an existing record
    âœ” should not render a SubrecordDetachButton when the data represents a new record
    âœ” should call detachSubrecord when the subrecord detach button is clicked
  TermPickerInput
    âœ” should render a cspace-input TermPickerInput
    âœ” should call readTerms when mounted
    âœ” should call readTerms when new perms are supplied via props
    âœ” should call intl.formatMessage to format the status message
  TermsUsedPanel
    âœ” should render a search panel
    âœ” should render nothing if the record data has not been saved
    âœ” should rerender with the new search descriptor when it is changed by the search panel
    âœ” should rerender with a new search descriptor when a new csid is supplied via props
    âœ” should retain the same page number and page size when only the last updated timestamp is changed
  TypedHierarchyEditor
    âœ” should render inputs for the parent and nested repeating inputs for the children
    âœ” should render an input for the parent if showParent is false
    âœ” should not render inputs for the children if showChildren is false
    âœ” should filter the current record out of term matches
    âœ” should call onCommit when a parent ref name value is committed
    âœ” should call onCommit when a parent type value is committed
    âœ” should call onCommit when a child ref name value is committed
    âœ” should call onCommit when a child type value is committed
    âœ” should call onAddChild when a child value is added
    âœ” should call onRemoveChild when a child value is removed
  URLInput
    âœ” should render a LineInput with a link and formatted link content
  UndeprecateButton
    âœ” should render a button
    âœ” should render nothing if isUndeprecatable is false
    âœ” should be disabled if isModified is true
    âœ” should be disabled if isSavePending is true
  UnrelateButton
    âœ” should render a button
    âœ” should render nothing if isUnrelatable is false
  UntypedHierarchyEditor
    âœ” should render an input for the parent and a repeating input for the children
    âœ” should not render an input for the parent if showParent is false
    âœ” should not render an input for the children if showChildren is false
    âœ” should filter the current record out of term matches
    âœ” should call onCommit when a parent value is committed
    âœ” should call onCommit when a child value is committed
    âœ” should call onAddChild when a child value is added
    âœ” should call onRemoveChild when a child value is removed
  UsedByPanel
    âœ” should render a search panel
    âœ” should render nothing if the record data has not been saved
    âœ” should rerender with the new search descriptor when it is changed by the search panel
    âœ” should rerender with a new search descriptor when a new csid is supplied via props
    âœ” should retain the same page number and page size when only the last updated timestamp is changed
  WorkflowStateIcon
    âœ” should render as a div
    âœ” should render the locked icon image if value contains 'locked'
    âœ” should render the replicated icon image if value contains 'replicated'
    âœ” should render the replicated icon image if value contains 'deprecated'
    âœ” should render nothing if the value is empty
    âœ” should render nothing if the value does not contain a known workflow state
  WorkflowStateInput
    âœ” should render as a div
    âœ” should render a workflow state icon
  ProtectedRoute
    âœ” should render a route to a Redirect if no username is supplied
    âœ” should render a route to a ProtectedPage if a username is supplied
  AdvancedSearchBuilder
    âœ” should render as a Panel
    âœ” should call onConditionCommit when mounted
    âœ” should call onConditionCommit when updated
    âœ” should set the top-level op to the preferred boolean op if it is a different boolean op
    âœ” should merge the condition into the default condition for the record type
    âœ” should merge a non-boolean condition into the child conditions of the default condition, and set the top-level op to the preferred boolean op
    âœ” should merge <= operations into range operations
    âœ” should merge >= operations into range operations
  PageSizeChooser
    âœ” should render as a div
    âœ” should show the page size as the input value
    âœ” should show page size options in the dropdown menu
    âœ” should call onPageSizeChange when a page size is selected in the menu
    âœ” should call onPageSizeChange when a page size is entered in the input
    âœ” should not call onPageSizeChange when an invalid page size is entered in the input
    âœ” should not call onPageSizeChange when the current page size is selected
  Pager
    âœ” should render as a div
    âœ” should show a window of pages around the current page
    âœ” should offset the window when it overflows the beginning or end of the page range
    âœ” should always show the first and last pages
    âœ” should show an ellipsis between the first page and the beginning of the window
    âœ” should show an ellipsis between the last page and the end of the window
    âœ” should show the page number instead of an ellipsis when the gap between the first page and the beginning of the window is only one page
    âœ” should show the page number instead of an ellipsis when the gap between the last page and the end of the window is only one page
    âœ” should call onPageChange when a page button is clicked
    âœ” should call onPageChange when the previous page button is clicked
    âœ” should call onPageChange when the next page button is clicked
  QuickSearchForm
    âœ” should render as a fieldset
    âœ” should render a QuickSearchInput
    âœ” should use intl to format the record type and vocabulary names
  RangeSearchField
    âœ” should render as a div
    âœ” should render a start field and an end field
    âœ” should call onCommit when the start field is committed
    âœ” should call onCommit when the end field is committed
  SearchField
    âœ” should render a Field
    âœ” should pass parentPath, name, and value props to the base Field
    âœ” should override props on the base Field
    âœ” should append a null item and commit the new value when a repeating field instance is added
    âœ” should convert a scalar value to a list when a repeating field instance is committed
    âœ” should set the item and commit the value when a repeating field instance is committed
    âœ” should convert a scalar value to a list when a repeating field instance is added
    âœ” should call onCommit when the field is committed and repeating is false
    âœ” should call onCommit with a string value when a boolean value is committed
    âœ” should delete the item and commit the new value when a repeating field instance is removed
    âœ” should render 'or' as the repeating field order indicator on values after the first
    âœ” should render '/' as the repeating field order indicator on values after the first if readOnly is true
  SearchForm
    âœ” should render as a form
    âœ” should not render a vocabulary input for non-authority record types
    âœ” should call onKeywordCommit when a keyword is committed
    âœ” should call onRecordTypeCommit when the record type is committed
    âœ” should call onVocabularyCommit when the vocabulary is committed
    âœ” should call onSearch when the form is submitted
  SearchPanel
    âœ” should render as a div
    âœ” should call search and onSearchDescriptorChange when mounted
    âœ” should call search and onSearchDescriptorChange when a new search descriptor is supplied
    âœ” should render a header, footer, and search result table
    âœ” should render an item count in the panel title if totalItems is present in the search result
    âœ” should render a filtered notification the panel title if isFiltered is true
    âœ” should call onSearchDescriptorChange when a page is selected
    âœ” should call onSearchDescriptorChange when the page size changes
    âœ” should call setPreferredPageSize when the page size changes
    âœ” should call onSearchDescriptorChange when a column is sorted
    âœ” should render a search link
    âœ” should render an add button when showAddButton is true
    âœ” should open the search to relate modal when the add button is clicked
    âœ” should close the search to relate modal after relations have been created
    âœ” should close the search to relate modal when its close button is clicked
    âœ” should close the search to relate modal when its cancel button is clicked
    âœ” should set allowedServiceTypes on the search to relate modal when the searched record type is a utility type
  SearchResultLink
    âœ” should render a pending message if search is pending
    âœ” should render an error message if there is a search error
    âœ” should render a not found message if the record is not found
    âœ” should render a link from the search result
    âœ” should render a link for an authority item result
    âœ” should render nothing if no search props are supplied
    âœ” should call search when mounted
    âœ” should call search when a new searchName is supplied via props
  SearchResultSummary
    âœ” should render as a div
    âœ” should render a not allowed message if a 401 search error is supplied
  SearchResultTable
    âœ” should render as a div
    âœ” should render the specified column set
    âœ” should render the default column set if the specified column set does not exist
    âœ” should render no columns if the specified column set does not exist, and there is no default column set
    âœ” should render the search result
    âœ” should render a link for each result
    âœ” should not render links when linkItems is false
    âœ” should not render links when the list type does not have a configured getItemLocationPath function
    âœ” should not render links when the list type getItemLocationPath function returns a blank path
    âœ” should not render when the search result contains no items
    âœ” should render a loading indicator when the search is pending and the search result has unknown total items count
    âœ” should properly render a single (non-list) search result
    âœ” should allow a search result to have no items, even if totalItems is non-zero
    âœ” should render the sorted column header specified in the search descriptor
    âœ” should call onSortChange when a sortable column header is clicked
    âœ” should call renderHeader to render the table header
    âœ” should call renderFooter to render the table header
    âœ” should call formatCellData to render the table header
    âœ” should call formatColumnLabel to render the column headers
    âœ” should call onItemClick when a row is clicked
    âœ” should call onItemClick when linkItems is false and enter is depressed on a row
  SearchResultTraverser
    âœ” should render a nav
    âœ” should render a pending message if no search state is provided
    âœ” should render a pending message if the search is pending
    âœ” should render a pending message if the search has an error
    âœ” should render nothing if no search descriptor is provided
    âœ” should render the current item number and the total item count
    âœ” should handle a result with a single (non-list) item
    âœ” should render a link to the previous item
    âœ” should render a link to the next item
    âœ” should render a link to the first item on the next page when the current item is the last on its page, and the next page has been loaded
    âœ” should render a placeholder link to the first item on the next page when the current item is the last on its page, and the next page is pending
    âœ” should render a placeholder next link when the current item is the last item of all pages
    âœ” should handle a next page result set with a single (non-list) item
    âœ” should render a link to the last item on the previous page when the current item is the first on its page, and the previous page has been loaded
    âœ” should render a placeholder link to the last item on the previous page when the current item is the first on its page, and the previous page is pending
    âœ” should render a placeholder previous link when the current item is the first item of all pages
    âœ” should handle a previous page result set with a single (non-list) item
    âœ” should call search when mounted if a search state is not provided
    âœ” should call search when updated if a search state is not provided
    âœ” should call search when mounted if a previous page search state is not provided, and the current item is the first on its page
    âœ” should call search when mounted if a next page search state is not provided, and the current item is the last on its page
    âœ” should handle a single item (non-list) search result when deciding if the next page should be retrieved
  SearchToRelateModal
    âœ” should render a modal
    âœ” should call onRecordTypeCommit with the default record type when opened
    âœ” should call clearSearchResults and onRecordTypeCommit with empty value when closed
    âœ” should render a search form
    âœ” should render a record type dropdown without the "all" option when allowedServiceTypes is supplied
    âœ” should call onCloseButtonClick when the cancel button is clicked
    âœ” should call onCancelButtonClick when the cancel button is clicked
    âœ” should call search and render a search result table when the search button is clicked
    âœ” should call search when the search form is submitted
    âœ” should render a table header containing a summary with an edit button and select bar when there is a search result
    âœ” should not render a table header when there is a search error
    âœ” should render a table footer containing a pager when there is a search result
    âœ” should call setPreferredPageSize when the page size is changed in a pager
    âœ” should update the page number on future searches when the page is changed in a pager
    âœ” should not render a table footer when there is no search result
    âœ” should render a checkbox for items that are not already related and not locked
    âœ” should call onItemSelectChange when a checkbox value is committed
    âœ” should not render a checkbox for the subject result item, if there is only one subject
    âœ” should update the sort direction of future searches when the sort direction is changed in the result table
    âœ” should render a relating message and call createRelations followed by onRelationsCreated when the relate button is clicked
    âœ” should call showRelationNotification if multiple subjects are successfully related
    âœ” should call subjects to retrieve subjects if it is a function
  SearchToRelateTitleBar
    âœ” should render as a header
    âœ” should render nothing for an unknown record type
    âœ” should render the vocabulary name if a vocabulary is supplied
    âœ” should show the keyword and advanced search condition after a search is initiated
    âœ” should render the vocabulary name if a vocabulary is supplied after a search is initiated
  SelectBar
    âœ” should render a checkbox and a message
    âœ” should render nothing if no search result is supplied
    âœ” should render nothing if search result contains no items
    âœ” should render buttons supplied via props
    âœ” should render the checkbox as checked when all items are selected
    âœ” should render the checkbox as unchecked when no items are selected
    âœ” should render the checkbox as indeterminate when some but not all items are selected
    âœ” should render the checkbox correctly when there is a single (non-list) result item
    âœ” should use showCheckboxFilter to determine the items to consider when calculating the checkbox state
    âœ” should call setAllItemsSelected when the checkbox value is committed
  BooleanConditionInput
    âœ” should render as a div
    âœ” should have 'All' selected in the boolean operator dropdown when an AND condition is supplied
    âœ” should have 'Any' selected in the boolean operator dropdown when an OR condition is supplied
    âœ” should render a field condition input for each child condition
    âœ” should call onCommit when the boolean operator is committed
    âœ” should call onCommit when a child condition is committed
  FieldConditionInput
    âœ” should render as a div
    âœ” should render a field, operation, and value
    âœ” should prefer the fullName message for the field label
    âœ” should fall back to the name message if fullName is not provided
    âœ” should fall back to the field name if neither fullName nor name are provided
    âœ” should render a range input for range conditions
    âœ” should call onCommit when the search field is committed
  SearchConditionInput
    âœ” should render a BooleanConditionInput for AND conditions
    âœ” should render a BooleanConditionInput for OR conditions
    âœ” should render a FieldConditionInput for other conditions
    âœ” should pass condition, fields, and onCommit props to the base component
  About
    âœ” should render as a div
    âœ” should render with correct class
  Dock
    âœ” should render as a header
    âœ” should dock and undock when scrolled
  Footer
    âœ” should render as a footer
    âœ” should render plugin info from config
ERROR: 'Warning: Failed prop type: The prop `screenName` is marked as required in `Header`, but its value is `undefined`.
    in Header (created by WithConfig)
    in WithConfig (created by InjectIntl(WithConfig))
    in InjectIntl(WithConfig)
    in Router (created by MemoryRouter)
    in MemoryRouter
    in ConfigProvider
    in Provider
    in IntlProvider'
ERROR: 'Warning: Failed prop type: The prop `screenName` is marked as required in `UserMenu`, but its value is `undefined`.
    in UserMenu (created by Header)
    in Header (created by WithConfig)
    in WithConfig (created by InjectIntl(WithConfig))
    in InjectIntl(WithConfig)
    in Router (created by MemoryRouter)
    in MemoryRouter
    in ConfigProvider
    in Provider
    in IntlProvider'
  Header
    âœ” should render as a header
  AccountLabel
    âœ” should render the user id if account is not supplied
    âœ” should render the screen name if account is supplied
    âœ” should render nothing if neither user id nor screen name are present
    âœ” should call findAccount when mounted
    âœ” should call findAccount when a new user id is supplied via props
  PasswordResetForm
    âœ” should render as a form
    âœ” should call reset when the form is submitted
    âœ” should show an error notification when no password is supplied
    âœ” should show an error notification when no password confirmation is supplied
    âœ” should show an error notification when the password differs from the password confirmation
    âœ” should show an error notification when the password is too short
    âœ” should show an error notification when the password is too long
    âœ” should show an error notification when the token is invalid
    âœ” should show an error notification when the token is expired
    âœ” should show a generic error notification when an error occurs that is not specifically handled
    âœ” should render a success message instead of a form when a reset request succeeds
  PasswordResetRequestForm
    âœ” should render as a form
    âœ” should call requestReset when the form is submitted
    âœ” should show an error notification when no email is supplied
    âœ” should show an error notification when the email is not a valid email address
    âœ” should show an error notification when no account is found with the email address
    âœ” should show a generic error notification when an error occurs that is not specifically handled
    âœ” should render a success message instead of a form when a reset request succeeds
  UserMenu
    âœ” should render as a div
[33m26 03 2019 10:48:30.809:WARN [web-server]: [39m404: /cspace-services/undefined/urn:cspace:name(person)/items?pt=abcd&wf_deleted=false
[33m26 03 2019 10:48:30.809:WARN [web-server]: [39m404: /cspace-services/idgenerators/9dd92952-c384-44dc-a736-95e435c1759c?wf_deleted=false
[33m26 03 2019 10:48:30.811:WARN [web-server]: [39m404: /cspace-services/idgenerators/9dd92952-c384-44dc-a736-95e435c1759c/ids
    âœ” should render with correct class
  PermissionsInputContainer
    âœ” should set props on PermissionsInput
  RolesInputContainer
    âœ” should set props on RolesInput
  VocabularyUsedByPanelContainer
    âœ” should set props on VocabularyUsedByPanel
  AutocompleteInputContainer
    âœ” should set props on AutocompleteInput
    âœ” should render if no source is provided
    âœ” should remove from source any record types for which there are not list permissions
    âœ” should set quickAddTo to contain source record types for which there are create permissions, and are not locked
    âœ” should connect addTerm, findMatchingTerms, and onClose to action creators
    âœ” should connect formatAddPrompt, formatCloneOptionLabel, formatCreateNewOptionLabel, formatMoreCharsRequiredMessage, formatSearchResultMessage, and formatSourceName to intl.formatMessage
  ComboBoxInputContainer
    âœ” should set props on ComboBoxInput
    âœ” should connect formatOptionLabel to intl.formatMessage
  DateInputContainer
    âœ” should set DateInput locale from intl
  DateTimeInputContainer
    âœ” should set props on DateTimeInput
    âœ” should use intl to format the value
  IDGeneratorInputContainer
    âœ” should set pattern on IDGeneratorInput
    âœ” should accept multiple comma separated source values
    âœ” should accept an array of source values
    âœ” should set sampleColumnLabel from intl
    âœ” should set typeColumnLabel from intl
    âœ” should connect onOpen to readIDGenerator action creator
    âœ” should connect generateID to createID action creator
  UploadInputContainer
    âœ” should set props on UploadInput
    âœ” should use intl to format the file info
    âœ” should connect onTypeChanged to setUploadType action creator
  InvocationEditorContainer
    âœ” should set props on InvocationEditor
    âœ” should connect createNewRecord to createNewRecord action creator
  PanelContainer
    âœ” should set props on Panel
    âœ” should set collapsed from own props if state is not present in the store
    âœ” should set header content using the message descriptor keyed by panel name
    âœ” should set header content using the message descriptor keyed by msgkey prop if supplied
    âœ” should render no header content if no message is found
  LoginFormContainer
    âœ” should set props on LoginForm
  LogoutIndicatorContainer
    âœ” should set props on LogoutIndicator
  MediaViewerContainer
    âœ” should set props on MediaViewer
  MediaViewerPanelContainer
    âœ” should set props on MediaViewerPanel
  ValidationErrorNotificationContainer
    âœ” should set props on ValidationErrorNotification
  AccountPageContainer
    âœ” should set props on AccountPage
  AdminPageContainer
    âœ” should set props on AdminPage
  AuthRolePageContainer
    âœ” should set props on AuthRolePage
  ContentViewerPageContainer
    âœ” should set props on ContentViewerPage
    âœ” should connect readContent to an action that fetches the content as a blob
  CreatePageContainer
    âœ” should set props on CreatePage
    âœ” should return the workflow state from the store when getAuthorityVocabWorkflowState is called
  LoginPageContainer
    âœ” should set props on LoginPage
  LogoutPageContainer
    âœ” should set props on LogoutPage
  RecordPageContainer
    âœ” should set props on RecordPage
  ReportViewerPageContainer
    âœ” should set props on ReportViewerPage
    âœ” should connect readContent to an action that invokes the report
  SearchPageContainer
    âœ” should set props on SearchPage
    âœ” should connect getAuthorityVocabCsid to getAuthorityVocabCsid selector
[33m26 03 2019 10:48:30.864:WARN [web-server]: [39m404: /cspace-services/relations?prd=hasBroader&wf_deleted=false&pgSz=0&obj=1234
    âœ” should connect onAdvancedSearchConditionCommit to setSearchPageAdvanced action creator
    âœ” should connect onKeywordCommit to setSearchPageKeyword action creator
    âœ” should connect onRecordTypeCommit to setSearchPageRecordType action creator
    âœ” should connect onVocabularyCommit to setSearchPageVocabulary action creator
    âœ” should connect onSearch to initiateSearch action creator
    âœ” should connect onClearButtonClick to clearSearchPage action creator
  SearchResultPageContainer
    âœ” should set props on SearchResultPage
  VocabularyPageContainer
    âœ” should set props on VocabularyPage
  HierarchyInputContainer
    âœ” should set props on HierarchyInput
  HierarchyReparentNotifierContainer
    âœ” should set props on HierarchyReparentNotifier
  HierarchySiblingListContainer
    âœ” should set props on HierarchySiblingList
    âœ” should connect findRelations to find action creator
  MiniViewPopupAutoCompleteInput
    âœ” should set props on MiniViewPopupAutocompleteInput
  OptionPickerInputContainer
    âœ” should set props on OptionPickerInput
  RecordEditorContainer
    âœ” should set props on RecordEditor
    âœ” should connect createNewRecord to createNewRecord action creator
    âœ” should connect deleteRecord to deleteRecord action creator
    âœ” should connect readRecord to readRecord action creator
    âœ” should connect revert to revertRecord action creator
    âœ” should connect save to saveRecord action creator
    âœ” should connect saveWithTransition to saveRecordWithTransition action creator
    âœ” should connect closeModal to closeModal action creator
    âœ” should connect removeNotification to removeNotification action creator
    âœ” should connect removeValidationNotification to removeValidationNotification action creator
    âœ” should connect validateRecordData to validateRecordData action creator
    âœ” should connect transitionRecord to transitionRecord action creator
    âœ” should connect openModal to openModal action creator
    âœ” should connect setForm to setForm action creator
    âœ” should connect checkForRelations to checkForRelations action creator
    âœ” should connect checkForUses to checkForUses action creator
    âœ” should connect checkForRoleUses to checkForRoleUses action creator
  RecordFormContainer
    âœ” should set props on RecordForm
[33m26 03 2019 10:48:30.986:WARN [web-server]: [39m404: /cspace-services/relations
    âœ” should connect onAddInstance to addFieldInstance action creator
    âœ” should connect onCommit to setFieldValue action creator
    âœ” should connect onMoveInstance to moveFieldValue action creator
    âœ” should connect onRemoveInstance to deleteFieldValue action creator
    âœ” should connect onSortInstances to sortInstances action creator
  RecordTitleBarContainer
    âœ” should set props on RecordTitleBar
  RelationEditorContainer
    âœ” should set props on RelationEditor
    âœ” should connect createRelation to createBidirectional action creator
    âœ” should connect findRelation to find action creator
    âœ” should connect onUnmount to clearState action creator
  StructuredDateInputContainer
    âœ” should set props on StructuredDateInput
    âœ” should connect readTerms to readVocabularyItems action creator
  SubrecordEditorContainer
    âœ” should set props on SubrecordEditor
  TermPickerInputContainer
    âœ” should set props on TermPickerInput
    âœ” should set terms to null if the source vocabulary does not exist
    âœ” should connect readTerms to readVocabularyItems action creator
  ProtectedRouteContainer
    âœ” should set props on ProtectedRoute
  QuickSearchFormContainer
    âœ” should set props on QuickSearchForm
[33m26 03 2019 10:48:30.995:WARN [web-server]: [39m404: /cspace-services/relations?prd=affects&wf_deleted=false&pgSz=0&sbj=1234&obj=8888
    âœ” should connect getAuthorityVocabCsid to getAuthorityVocabCsid selector
    âœ” should connect onKeywordCommit to setQuickSearchKeyword action creator
    âœ” should connect onRecordTypeCommit to setQuickSearchRecordType action creator
    âœ” should connect onVocabularyCommit to setQuickSearchVocabulary action creator
    âœ” should connect search to initiateSearch action creator
  SearchPanelContainer
    âœ” should set props on SearchPanel
    âœ” should override the page size in the provided search descriptor with the preferred page size
  SearchResultLinkContainer
    âœ” should set props on SearchResultLink
  SearchResultTableContainer
    âœ” should set props on SearchResultTable
    âœ” should connect formatColumnLabel to intl.formatMessage
    âœ” should supply formatCellData with intl and config
    âœ” should have formatCellData return the data if the column config does not contain a formatValue function
  SearchResultTraverserContainer
    âœ” should set props on SearchResultTraverser
    âœ” should set prevPageSearchState to undefined if the search descriptor is on page 0
  SearchToRelateModalContainer
    âœ” should set props on SearchToRelateModal
    âœ” should connect getAuthorityVocabCsid to getAuthorityVocabCsid selector
  PasswordResetRequestFormContainer
    âœ” should set props on PasswordResetRequestForm
    âœ” should connect requestReset to requestReset action creator
  withBooleanValue
    âœ” should convert a 'true' value to boolean true
    âœ” should convert a 'false' value to boolean false
    âœ” should pass a boolean true value to the base component
    âœ” should pass a boolean false value to the base comoponent
    âœ” should pass a null value to the base comoponent
    âœ” should pass an undefined value to the base comoponent
    âœ” should pass other string values to the base comoponent
  withCsid
    âœ” should set csid prop on the base component with csid from context
  withListType
    âœ” should set listType prop on the base component with the given value
  withRecordType
    âœ” should set recordType prop on the base component with recordType from context
  blobHelpers
    getDerivativePath
      âœ” should return the url of a derivative
      âœ” should return the url of the original image
      âœ” should return a relative url if there is no services url
    getImageViewerPath
      âœ” should prepend the basename and '/view' to the image path
      âœ” should not prepend the basename if it is falsy
    derivativeImage
      âœ” should return a BlobImage with the given csid and derivative
      âœ” should return null if no csid is supplied
    thumbnailImage
      âœ” should return a BlobImage with the given csid and the thumbnail derivative
    smallImage
      âœ” should return a BlobImage with the given csid and the small derivative
    mediumImage
      âœ” should return a BlobImage with the given csid and the medium derivative
    originalJpegImage
      âœ” should return a BlobImage with the given csid and the original jpeg derivative
    originalImage
      âœ” should return a BlobImage with the given csid and the original derivative
ERROR: 'Warning: A plugin must be an object or a function.'
ERROR: 'Warning: A plugin must be an object or a function.'
ERROR: 'Warning: A plugin must be an object or a function.'
ERROR: 'Warning: A plugin must be an object or a function.'
ERROR: 'Warning: A plugin must be an object or a function.'
  configHelpers
    evaluatePlugin
      âœ” should return empty object if the plugin is not an object or function
      âœ” should return the plugin if it is an object
      âœ” should call the plugin with the configContext if it is a function
    applyPlugin
      âœ” should deeply merge the config contribution from the plugin with the target config
ERROR: 'Warning: Plugins must be an array.'
ERROR: 'Warning: Plugins must be an array.'
ERROR: 'Warning: Plugins must be an array.'
ERROR: 'Warning: Plugins must be an array.'
ERROR: 'Warning: Plugins must be an array.'
    applyPlugins
      âœ” should return the target config if plugins is not an array
      âœ” should apply each plugin to the target config in order
    mergeConfig
      âœ” should not retain the plugins config option after merge
      âœ” should apply plugins from the source config, then merge in the source config
      âœ” should overwrite arrays in the target with the source value, instead of deeply merging them
      âœ” should overwrite the 'advancedSearch' key in the target with the source value, instead of deeply merging them
      âœ” should overwrite React elements in the target with the source value, instead of deeply merging them
      âœ” should overwrite objects in the target with the source value, instead of deeply merging them, when the 'override' merge strategy is specified
      âœ” should overwrite objects in the target with the source value, instead of deeply merging them, when the 'override' merge strategy is specified using the override function
    initConfig
      âœ” should apply the plugins
    initializeExtensions
      âœ” should set the extensionName property of each top level field in each extension to the extension name
    initializeRecordTypes
      âœ” should set the name properties on record types and vocabularies
      âœ” should set the extensionParentConfig field on extension fields
    finalizeRecordTypes
      âœ” should delete disabled record types and vocabularies
    getRecordTypeConfigByServiceDocumentName
      âœ” should return the record type config with the given service object name
      âœ” should return undefined if the service object name is undefined
    getRecordTypeConfigByServiceObjectName
      âœ” should return the record type config with the given service object name
      âœ” should return undefined if the service object name is undefined
    getRecordTypeNameByServiceObjectName
      âœ” should return the record type config with the given service object name
      âœ” should return undefined if the service object name is undefined
    getRecordTypeConfigByServicePath
      âœ” should return the record type config with the given service path
      âœ” should return undefined if no service path is supplied
    getRecordTypeConfigByUri
      âœ” should return the record type config with the given URI
    getRecordTypeNameByUri
      âœ” should return the record type config with the given URI
      âœ” should return undefined if the URI is undefined
    getVocabularyConfigByShortID
      âœ” should return the vocabulary type config with the given short id
      âœ” should return undefined if no short id is supplied
    getVocabularyConfigByServicePath
      âœ” should return the vocabulary type config with the given service path
      âœ” should return undefined if the service path is not a valid cspace URN
    getDefaults
      âœ” should return the paths and default values of fields that have defaults
    getStickyFields
      âœ” should return the paths of fields that are sticky
      âœ” should return an empty array if no field descriptor is supplied
    getDefaultValue
      âœ” should return the default value from a field descriptor
      âœ” should convert an object to an immutable map
      âœ” should return false if the field is a boolean and the default value is undefined
    dataPathToFieldDescriptorPath
      âœ” should remove numeric path components from the data path
    isFieldCloneable
      âœ” should return the cloneable configuration setting
      âœ” should default to true
    isFieldRepeating
      âœ” should return the repeating configuration setting
      âœ” should default to false
    isFieldRequired
      âœ” should return the required configuration setting
      âœ” should return the result of calling the required function, if it is a function
      âœ” should default to false
    validateLocation
      âœ” should return ERR_UNKNOWN_RECORD_TYPE error if the record type is unknown
      âœ” should return ERR_MISSING_VOCABULARY error if an authority record type is passed with no vocabulary
      âœ” should return ERR_UNKNOWN_VOCABULARY error if an unknown vocabulary is passed
      âœ” should return ERR_UNKNOWN_VOCABULARY error if a vocabulary is passed with a non-authority record type
      âœ” should return ERR_UNKNOWN_SUBRESOURCE error if an unknown subresource is passed
      âœ” should return ERR_INVALID_CSID error if an invalid csid is passed
      âœ” should return ERR_INVALID_RELATED_TYPE error if a relatedRecordType is passed that is not a procedure or object
      âœ” should return ERR_INVALID_RELATED_TYPE error if a relatedRecordType is passed and the recordType is not a procedure or object
      âœ” should return ERR_INVALID_CSID error if an invalid related csid is passed
      âœ” should return object with no error property if valid arguments are passed
    getDefaultSearchRecordType
      âœ” should return the record type with defaultForSearch set to true
      âœ” should return the first record type if none have defaultForSearch set to true
    getDefaultSearchVocabulary
      âœ” should return the vocabulary with defaultForSearch set to true
      âœ” should return the first record type if none have defaultForSearch set to true
    findFieldConfigInPart
      âœ” should find the field config given a part name and field name
      âœ” should find nested fields
      âœ” should return null if an unknown part name is supplied
      âœ” should return null if an unknown field name is supplied
    isAuthority
      âœ” should return true if the service type is 'authority'
      âœ” should return true if the service type is not 'authority'
    isUtility
      âœ” should return true if the service type is 'utility'
      âœ” should return true if the service type is not 'utility'
    getFieldCustomValidator
      âœ” should return the validator from a field descriptor
      âœ” should return undefined if there is no field configuration
    getFieldComputer
      âœ” should return the compute function from a field descriptor
      âœ” should return undefined if there is no field configuration
    getFieldDataType
      âœ” should return the data type from a field descriptor
      âœ” should default to string if there is no field configuration
      âœ” should default to string if there is no data type specified in configuration
      âœ” should default to map if there is no data type specified in configuration and child fields are defined
    getRequiredMessage
      âœ” should return the required message descriptor
    findVocabularyUses
      âœ” should find fields in config using the given shortId as a source
      âœ” should return null if no short id is supplied
    getFirstColumnName
      âœ” should return the field with the lowest order in the column set
      âœ” should return undefined if no column config exists for the given column set name
      âœ” should use the column set named 'default' if no column set is specified
  csidHelpers
    isCsid
      âœ” should recognize short csids
      âœ” should recognize long csids
      âœ” should return false for non-csids
    isUrnCsid
      âœ” should recognize urn csids
      âœ” should return false for non-urn csids
      âœ” should return false for non-csids
    getUrnCsidShortId
      âœ” should return the short id from a urn csid
    asKeywords
      âœ” should convert dashes to spaces and add quotes
  formatHelpers
    formatTimestamp
      âœ” should return a formatted timestamp
    formatServiceObjectName
      âœ” should return a formatted record type name
      âœ” should return a placeholder if the record type is unknown
    formatRefNameAsRecordType
      âœ” should return a formatted record type name
      âœ” should return a placeholder if the record type is unknown
    formatRefNameAsVocabularyName
      âœ” should return a formatted vocabulary name
      âœ” should return a placeholder if the record type is unknown
      âœ” should return a placeholder if the vocabulary is unknown
    formatRecordTypeSourceField
      âœ” should return a formatted field name
    formatSourceField
      âœ” should return a formatted field name
    formatForeignSourceField
      âœ” should return a formatted field name
    formatWorkflowStateIcon
      âœ” should return a WorkflowStateIcon
  objectHelpers
    flatten
      âœ” should flatten deeply nested objects
      âœ” should flatten to the given maximum depth
    diff
      âœ” should return a map of paths that differ
      âœ” should compare to the given maximum depth
  parseResourceID
    âœ” should parse a string into an array of objects
    âœ” should return an empty array for a falsy input
  permissionHelpers
    mergeActionGroup
      âœ” should merge the given action group into existing permissions
      âœ” should set the permissions if there are no existing permissions
    getPermissions
      âœ” should retrieve data permissions for configured record types
      âœ” should set canCreateNew to false if no object/procedure/authority can be created
      âœ” should set canAdmin to true if vocabularies or security records can be updated or created
      âœ” should retrieve permissions when there is a single (non-list) permission
      âœ” should return empty permissions if there are no permissions in the data
      âœ” should retrieve transition permissions for configured record types
      âœ” should ignore unrecognized resource names
    canCreate
      âœ” should return true if create permission exists for the record type
      âœ” should return false if create permission does not exist for the record type
      âœ” should return false if permissions do not exist
      âœ” should return false if data permissions do not exist for the record type
    canRead
      âœ” should return true if read permission exists for the record type
      âœ” should return false if read permission does not exist for the record type
      âœ” should return false if permissions do not exist
      âœ” should return false if data permissions do not exist for the record type
    canUpdate
      âœ” should return true if update permission exists for the record type
      âœ” should return false if update permission does not exist for the record type
      âœ” should return false if permissions do not exist
      âœ” should return false if data permissions do not exist for the record type
    canDelete
      âœ” should return true if delete permission exists for the record type
      âœ” should return false if delete permission does not exist for the record type
      âœ” should return false if permissions do not exist
      âœ” should return false if data permissions do not exist for the record type
    canList
      âœ” should return true if list permission exists for the record type
      âœ” should return false if list permission does not exist for the record type
      âœ” should return false if permissions do not exist
      âœ” should return false if data permissions do not exist for the record type
    canRelate
      âœ” should return false create permissions do not exist for the relation record type
      âœ” should return true if update permission exists for the member record type
      âœ” should return false if update permission does not exist for the member record type
      âœ” should return false if permissions do not exist
      âœ” should return false if data permissions do not exist for the member record type
    canSoftDelete
      âœ” should return true if update permission for the delete transition exists for the record type
      âœ” should return false if update permission for the delete transition does not exist for the record type
      âœ” should return false if permissions do not exist
      âœ” should return false if transition permissions do not exist for the record type
    canCreateNew
      âœ” should return true if canCreateNew is true in the permissions
    canAdmin
      âœ” should return true if canAdmin is true in the permissions
    disallowCreate
      âœ” should remove create permission on the specified record type
      âœ” should have no effect if create permission does not exist on the specified record type
    disallowDelete
      âœ” should remove delete permission on the specified record type
      âœ” should have no effect if delete permission does not exist on the specified record type
    disallowSoftDelete
      âœ” should remove permission to soft delete the specified record type
      âœ” should have no effect if soft delete permission does not exist on the specified record type
  recordDataHelpers
    getPartPropertyName
      âœ” should return the part name prepended with the namespace prefix
    getPartNSPropertyName
      âœ” should return the suppplied namespace prefix prepended with '@xmlns:'
    getPart
      âœ” should return the named part from the given data
    deepGet
      âœ” should throw when path is not an array
      âœ” should throw when path is an empty array
      âœ” should return undefined when data is null or undefined
      âœ” should get a child value
      âœ” should get a nested Map value
      âœ” should get a deeply nested Map value
      âœ” should return undefined for a non-existent path
      âœ” should get a nested list value
      âœ” should set a deeply nested list value
      âœ” should treat a single (non-list) value as a list when it is keyed by '0'
    deepSet
      âœ” should throw when path is not an array
      âœ” should throw when path is an empty array
      âœ” should set a child value
      âœ” should set a nested Map value
      âœ” should set a deeply nested Map value
      âœ” should set a nested list value
      âœ” should set a deeply nested list value
      âœ” should create missing Maps
      âœ” should create missing Lists
      âœ” should promote non-list values to lists when keyed with a numeric key
    deepDelete
      âœ” should throw when path is not an array
      âœ” should throw when path is an empty array
      âœ” should delete a child value
      âœ” should delete a nested Map value
      âœ” should delete a deeply nested Map value
      âœ” should delete a nested list value
      âœ” should delete a deeply nested list value
      âœ” should create missing Maps
      âœ” should create missing Lists
      âœ” should promote non-list values to lists when keyed with a numeric key
    createBlankRecord
      âœ” should return an Immutable.Map
      âœ” should create properties for the document
      âœ” should create properties for each part
    createRecordData
      âœ” should return an Immutable.Map
      âœ” should have a document property
    getDocument
      âœ” should return the document object from the record data
    attributePropertiesToTop
      âœ” should return -1 if the first argument starts with '@' and the second does not
      âœ” should return 1 if the second argument starts with '@' and the first does not
      âœ” should return 0 if both arguments start with '@'
      âœ” should return 0 if neither argument starts with '@'
    prepareForSending
      âœ” should remove the collectionspace_core part
      âœ” should remove the account_permission part
      âœ” should sort attribute and namespace declaration properties to the top of each part
      âœ” should filter out incomplete relation items
      âœ” should filter out incomplete relation items 
      âœ” should set subrecord csid fields that don't contain valid csids to null
      âœ” should sort attribute and namespace properties of the root to the top
      âœ” should call a configured prepareForSending function
    copyValue
      âœ” should copy a scalar value from the source to the destination
      âœ” should overwrite existing destination values
      âœ” should copy a list value from the source to the destination
      âœ” should overwrite an existing scalar value with a list value copied from the source
      âœ” should overwrite an existing list value with a list value copied from the source
      âœ” should recursively copy a complex value from the source to the destination
      âœ” should recursively copy lists of complex values from the source to the destination
    spreadDefaultValue
      âœ” should set the value if the path does not exist
      âœ” should set the value if the current value is undefined
      âœ” should not set the value if the current value is not undefined
      âœ” should return the data unchanged if it is an unexpected type
      âœ” should set the value in all existing undefined instances of a repeating field
      âœ” should set the value in all existing instances of a field in a repeating group
      âœ” should set the value in all existing instances of a field in a nested repeating group
      âœ” should set the value in undefined instances of a repeating group
    applyDefaults
      âœ” should set all default values from config into the data
    initializeChildren
      âœ” should set undefined children to null
      âœ” should return the data if the field descriptor does not define child fields
    clearUncloneable
      âœ” should set uncloneable fields with no default to undefined
      âœ” should set uncloneable fields with a default to the default
      âœ” should do nothing to fields that are cloneable
      âœ” should clear all instances of a repeating field
      âœ” should clear all instances of a field in a repeating group
    cloneRecordData
      âœ” should omit the collectionspace_core and account_permission parts
      âœ” should clear uncloneable fields
      âœ” should prepare the record's hierarchy relations
      âœ” should return undefined for undefined data
    prepareClonedHierarchy
      âœ” should retain only the relation to a broader record, and set the subject csid to the new record placeholder
      âœ” should delete all relations if there is no relation to a broader record
      âœ” should handle a single (non-list) relation item
    getCreatedTimestamp
      âœ” should return a core schema createdAt value
      âœ” should return a top level createdAt value  
    getCreatedUser
      âœ” should return the created timestamp
    getUpdatedTimestamp
      âœ” should return a core schema updatedAt value
      âœ” should return a top level updatedAt value
    getUpdatedUser
      âœ” should return the updated timestamp
    getCoreFieldValue
      âœ” should return the specified field from the core part
      âœ” should return undefined if the field does not exist
      âœ” should return undefined if the data does not exist
    getCsid
      âœ” should return the csid extracted from the uri field in the core part
      âœ” should return undefined if the data does not exist
    getRefName
      âœ” should return the refName extracted from the core part
      âœ” should return undefined if the data does not exist
    validateField
      âœ” should resolve to null if the value is valid
      âœ” should resolve to an error if a required field is empty, null, or undefined
      âœ” should resolve to null if an integer field is valid
      âœ” should resolve to an error if an integer field is invalid
      âœ” should resolve to null when no field descriptor is supplied
      âœ” should resolve to null if a float field is valid
      âœ” should resolve to an error if a float field is invalid
      âœ” should resolve to null if a date field is valid
      âœ” should resolve to an error if a date field is invalid
      âœ” should resolve to null if a datetime field is valid
      âœ” should resolve to an error if a datetime field is invalid
      âœ” should resolve to null if a boolean field is valid
      âœ” should resolve to an error if a boolean field is invalid
      âœ” should resolve to null if a map field is valid
      âœ” should resolve to an error if a map field is invalid
      âœ” should validate nested fields recursively
      âœ” should validate repeating instances when the expand repeating flag is true
      âœ” should not validate repeating instances when the expand repeating flag is false
      âœ” should run a custom validator
      âœ” should run an asynchronous custom validator
      âœ” should resolve to an error on the document when an asynchronous custom validator rejects
    validateRecordData
      âœ” should validate the data against the field descriptor in the record type config
    computeField
      âœ” should resolve to undefined if no field descriptor is supplied
      âœ” should resolve a computed value for scalar fields
      âœ” should resolve a computed value for repeating field instances
      âœ” should resolve a computed value for repeating fields
      âœ” should resolve a computed value for repeating field containers
      âœ” should resolve a computed value for complex fields
      âœ” should resolve a sparse tree of computed values for complex fields that have computed descendent fields
      âœ” should resolve to undefined if there are no computed fields
      âœ” should reject if the compute function throws
    computeRecordData
      âœ” should resolve a sparse tree of computed values for the record data
    isNewRecord
      âœ” should return false if the data contains a uri
      âœ” should return true if the data does not contain a uri
    isExistingRecord
      âœ” should return true if the data contains a uri
      âœ” should return false if the data does not contain a uri
    isRecordDeprecated
      âœ” should return true if the workflow state contains 'deprecated'
      âœ” should return false if no data is supplied
    isRecordImmutable
      âœ” should return true if the record is locked
      âœ” should return true if the record is deprecated
      âœ” should return true if the record is replicated
      âœ” should return true if the record is an immutable security record
    isRecordLocked
      âœ” should return true if the workflow state is 'locked'
      âœ” should return false if no data is supplied
    isRecordReplicated
      âœ” should return true if the workflow state contains 'replicated'
      âœ” should return false if no data is supplied
    isSecurityRecordImmutable
      âœ” should return true if permsProtection is 'immutable'
      âœ” should return true if rolesProtection is 'immutable'
      âœ” should return false if no data is supplied
      âœ” should return false if no data is supplied 
    normalizeFieldValue
      âœ” should return the value when the field descriptor is undefined
      âœ” should wrap the field value in a list when the field is repeating and the value is not a list
      âœ” should return the value when a repeating field value is already a list
      âœ” should deeply normalize maps
    normalizeRecordData
      âœ” should deeply normalize the data
      âœ” should call the configured record normalizer for the record type
    getWorkflowState
      âœ” should return the workflow state of the record
    setXmlNamespaceAttribute
      âœ” should set the namespace uri attribute on parts
    hasHierarchyRelations
      âœ” should return true if the record data contains a relations list with a relation-list-item
      âœ” should return true if the record data contains a relations list with multiple relation-list-items
      âœ” should return false if the record data contains a relations list with no relation-list-item
      âœ” should return false if the record data does not contain a relations list
    hasNarrowerHierarchyRelations
      âœ” should return true if the record data contains a relations list with a single relation-list-item that is a narrower relation
      âœ” should return true if the record data contains a relations list with multiple relation-list-items and at least one is a narrower relation
      âœ” should return false if the record data contains a relations list with no relation-list-item
      âœ” should return false if the record data does not contain a relations list
    getStickyFieldValues
      âœ” should return a map containing the values of sticky fields in the given record data
  refNameHelpers
    getRecordType
      âœ” should return the record type name from the ref name
      âœ” should return null if no known record type is found in the ref name
      âœ” should return null if no ref name is supplied
    getVocablary
      âœ” should return the vocabulary name from the ref name
      âœ” should return null if no known vocabulary is found in the ref name
      âœ” should return null if no ref name is supplied
    refNameToCsid
      âœ” should return a csid for a ref name that contains a short id
      âœ” should return the csid for a ref name that contains a csid
      âœ” should return null if no short id or csid are found in the ref name
      âœ” should return null if no ref name is supplied
    refNameToUrl
      âœ” should return the url to the record described by the ref name
      âœ” should return the url for a ref name that contains a csid
      âœ” should return null if the ref name contains an unknown record type
      âœ” should return null if the ref name contains an unknown vocabulary
      âœ” should return null if no ref name is supplied
  reportHelpers
    getReportViewerPath
      âœ” should prepend the basename and 'report' to the report csid, and add query parameters
      âœ” should not prepend the basename if it is falsy
  searchHelpers
    normalizeBooleanCondition
      âœ” should normalize the child conditions
      âœ” should remove child conditions that normalize to null
      âœ” should return the child condition if only one child condition remains after normalization
      âœ” should return null if no child conditions remain after normalization
    normalizeFieldCondition
      âœ” should normalize the value of the condition
      âœ” should return null if the normalized value is null
    normalizeRangeFieldCondition
      âœ” should normalize the value of the condition
      âœ” should add start/end times to timestamps
      âœ” should return null if the value normalizes to null
      âœ” should return null if the condition has no value
      âœ” should return a >= condition if the end of range is omitted
      âœ” should return a <= condition if the end of range is omitted
    normalizeCondition
      âœ” should return null for null input
      âœ” should normalize OP_AND conditions
      âœ” should normalize OP_OR conditions
      âœ” should normalize OP_MATCH conditions
      âœ” should normalize OP_RANGE conditions
    normalizeListFieldValue
      âœ” should return null if the list is undefined, null, or empty
      âœ” should remove empty and whitespace-only list items
      âœ” should normalize items
      âœ” should return null if the list is empty after normalizing items
      âœ” should return the item if the list contains only one item
    normalizeStringFieldValue
      âœ” should return null if the value is undefined, null, or empty
      âœ” should trim the value
      âœ” should return null if the value contains only whitespace
    normalizePatternValue
      âœ” should return the value if the value is undefined, null, or empty
      âœ” should replace * not preceded by an odd number of backslashes with %
    normalizeTimestampRangeStartValue
      âœ” should return null if the value is undefined, null, or empty
      âœ” should trim the value
      âœ” should add a time if the value does not have one
    normalizeTimestampRangeEndValue
      âœ” should return null if the value is undefined, null, or empty
      âœ” should trim the value
      âœ” should add a time if the value does not have one
    normalizeFieldValue
      âœ” should normalize list values
      âœ” should normalize string values
    operatorToNXQL
      âœ” should return an NXQL operator
    pathToNXQL
      âœ” should remove ns prefix from the part name
      âœ” should separate the part and the rest of the path with :
      âœ” should replace repeating items with *
    valueToNXQL
      âœ” should convert string typed values to quoted strings
      âœ” should escape quotes in strings that contain quotes
      âœ” should convert int typed values to unquoted numeric strings
      âœ” should convert float typed values to unquoted numeric strings
      âœ” should convert bool typed values to unquoted 0 or 1
      âœ” should convert datetime typed values to quoted strings preceded by 'TIMESTAMP'
      âœ” should convert datetime typed values to UTC
      âœ” should transform the value using the configured searchTransform function, if present
    booleanConditionToNXQL
      âœ” should convert AND conditions to NXQL
      âœ” should convert OR conditions to NXQL
      âœ” should convert nested AND/OR conditions to NXQL
      âœ” should return '' for an unknown operator
    rangeFieldConditionToNXQL
      âœ” should convert range conditions to NXQL
      âœ” should convert structured date range conditions to NXQL
    fieldConditionToNXQL
      âœ” should convert field conditions to NXQL
      âœ” should convert structured date field conditions to NXQL
      âœ” should convert contain operation to match operation with wildcards on either end
      âœ” should expand list values into multiple OR clauses
    advancedSearchConditionToNXQL
      âœ” should convert boolean conditions to NXQL
      âœ” should convert range conditions to NXQL
      âœ” should convert field conditions to NXQL
      âœ” should return null for a null condition
    structuredDateFieldConditionToNXQL
      âœ” should convert range operations to NXQL
      âœ” should convert contain operations to NXQL
      âœ” should convert = operations to NXQL
      âœ” should convert < operations to NXQL
      âœ” should convert <= operations to NXQL
      âœ” should convert > operations to NXQL
      âœ” should convert >= operations to NXQL
    searchDescriptorToLocation
      âœ” should put the record type, vocabulary, csid, and subresource into the location's pathname
      âœ” should stringify the searchQuery, and put it into the location's search
      âœ” should increment the page number by one (to make it human readable)
    getListType
      âœ” should return the list type of the given search descriptor's subresource, if it has one
      âœ” should return 'common' if the given search desriptor does not have a subresource
    getNextPageSearchDescriptor
      âœ” should increment the page number of the given search descriptor
      âœ” should treat the given search descriptor as having page 0 if it has no page
    getPreviousPageSearchDescriptor
      âœ” should decrement the page number of the given search descriptor
      âœ” should return null if the given search descriptor is on page 0
      âœ” should treat the given search descriptor as having page 0 if it has no page
    getFirstItem
      âœ” should return the first item of a list result
      âœ” should return undefined if there are no items in the list result
      âœ” should return the item in a single (non-array) list result
      âœ” should default to the 'common' list type if no list type is supplied
      âœ” should return null if the specified list type is not found in the configuration
      âœ” should return null if no list data is supplied
    getSubrecordSearchName
      âœ” should return the search name for the given csid and subrecord name
  uriHelpers
    serviceUriToLocation
      âœ” should translate an object/procedure URL to a UI location
      âœ” should translate an authority URL to a UI location
      âœ” should return undefined if no URI is supplied
      âœ” should return undefined if the URI is not a URL from the  REST API
      âœ” should return undefined if the record service path is unknown
      âœ” should return undefined if the vocabulary service path is unknown
  auth ref list type
    getItemLocationPath
      âœ” should compute the location from the refName and csid
      âœ” should return null if read permission does not exist for the record type
      âœ” should return null for an unknown record type
  common list type
    getItemLocationPath
      âœ” should compute the location from the docType and csid
      âœ” should include the vocabulary path
      âœ” should fall back to the record type from the search descriptor if there is no docType
      âœ” should return null for an unknown record type
  ref doc list type
    getItemLocationPath
      âœ” should compute the location from the refName and docId
      âœ” should compute the location for authority items
      âœ” should return null for an unknown record type
  acquisition record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  acquisition record columns
    âœ” should have the correct shape
    âœ” should have acquisition source column that is formatted as a refname display name
  acquisition record default form
    âœ” should be a Field
  acquisition record plugin
    âœ” should have the correct shape
  acquisition record messages
    âœ” should contain properties with id and defaultMessage properties
  acquisition record optionLists
    âœ” should export an object
  acquisition record serviceConfig
    âœ” should have servicePath property
  acquisition record title
    âœ” should concat the acquisition reference number and acquisition source
    âœ” should return the acquisition reference number when acquisition source is empty
    âœ” should return the acquisition source when the acquisition reference number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  all record columns
    âœ” should have correct shape
    âœ” should have docNumber column with the proper shape
    âœ” should have docNumber column that is formatted as a refname display name
    âœ” should have docType column with the proper shape
    âœ” should have docName column that is formatted as a refname display name
    âœ” should have docType column that is formatted as a record type name from a service object name
    âœ” should format the docType column with a fallback if no record type is found for the service object name
    âœ” should have updated column with the proper shape
    âœ” should have updatedAt column that is formatted as a date
  all record plugin
    âœ” should have the correct shape
  authority record columns
    âœ” should have correct shape
    âœ” should have docName column that is formatted as a refname display name
    âœ” should have docType column that is formatted as a record type name from a service object name
    âœ” should format the docType column with a fallback if no record type is found for the service object name
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
  authority record plugin
    âœ” should have the correct shape
  blob record default form
    âœ” should have a template function
    template
      âœ” should return 'upload' when the data represents a new record
      âœ” should return 'view' when the data represents an existing record
      âœ” should return null when no data is supplied
      âœ” should return null when the data does not contain a document
  blob record plugin
    âœ” should have the correct shape
    requestConfig
      âœ” should return a multipart/form-data config when the file field contains an array of files
      âœ” should return a blobUri param when the file field contains a string
      âœ” should return undefined when the file field contains an empty array
      âœ” should return undefined when the file field contains another type of value
  blob record title
    âœ” should return the name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  citation record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  citation record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
    âœ” should have term status column that is formatted as an option list value
  citation record default form
    âœ” should be a Field
  citation record plugin
    âœ” should have the correct shape
  citation record messages
    âœ” should contain properties with id and defaultMessage properties
  citation record optionLists
    âœ” should contain properties values and messages
  citation record serviceConfig
    âœ” should have servicePath property
  citation record title
    âœ” should return the primary display name
    âœ” should return empty string if no document is passed
    âœ” should return empty string if the common part is not present
  collectionobject record default form
    âœ” should be a Field
  collectionobject record plugin
    âœ” should have the correct shape
  collectionobject record messages
    âœ” should contain properties with id and defaultMessage properties
  collectionobject record optionLists
    âœ” should export an object
  collectionobject prepareForSending
    âœ” should remove the computedCurrentLocation field
  collectionobject record serviceConfig
    âœ” should have servicePath property
    âœ” should have a quickAddData function that returns an object
  collectionobject record title
    âœ” should concat the object number and primary title
    âœ” should return the object number when primary title is empty
    âœ” should return the primary title when object number is empty
    âœ” should work when titleGroupList is not present
    âœ” should work when titleGroup is an object (not an array)
    âœ” should work when titleGroup is not present
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  concept record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  concept record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
    âœ” should have term status column that is formatted as an option list value
  concept record default form
    âœ” should be a Field
  concept record plugin
    âœ” should have the correct shape
  concept record messages
    âœ” should contain properties with id and defaultMessage properties
  concept record optionLists
    âœ” should contain properties values and messages
  concept record serviceConfig
    âœ” should have servicePath property
  concept record title
    âœ” should return the primary display name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  condition check record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  condition check record columns
    âœ” should have the correct shape
    âœ” should have condition column that is formatted as an option list value
  condition check record default form
    âœ” should be a Field
  condition check record plugin
    âœ” should have the correct shape
  condition check record messages
    âœ” should contain properties with id and defaultMessage properties
  condition check record optionLists
    âœ” should contain properties values and messages
  condition check record serviceConfig
    âœ” should have servicePath property
  condition check record title
    âœ” should concat the condition check number and the condition
    âœ” should return the condition check number when the condition is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  conservation record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  conservation record columns
    âœ” should have the correct shape
    âœ” should have conservation status column that is formatted as a refname display name
  conservation record default form
    âœ” should be a Field
  conservation record plugin
    âœ” should have the correct shape
  conservation record messages
    âœ” should contain properties with id and defaultMessage properties
  conservation record serviceConfig
    âœ” should have servicePath property
  conservation record title
    âœ” should concat the conservation number and the status
    âœ” should return the conservation number when the status is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  contact record title
    âœ” should return the primary email
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  exhibition record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  exhibition record columns
    âœ” should have the correct shape
  exhibition record default form
    âœ” should be a Field
  exhibition record plugin
    âœ” should have the correct shape
  exhibition record messages
    âœ” should contain properties with id and defaultMessage properties
  exhibition record optionLists
    âœ” should contain properties values and messages
  exhibition record serviceConfig
    âœ” should have servicePath property
  exhibition record title
    âœ” should concat the exhibition number and the title
    âœ” should return the exhibition number when the title is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  group record columns
    âœ” should have correct shape
    âœ” should have owner column that is formatted as a refname display name
  group record default form
    âœ” should be a Field
  group record plugin
    âœ” should have the correct shape
  group record messages
    âœ” should contain properties with id and defaultMessage properties
  group record serviceConfig
    âœ” should have servicePath property
  group record title
    âœ” should concat the title and owner
    âœ” should return the title when owner is empty
    âœ” should return the owner when title is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  intake record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  intake record columns
    âœ” should have the correct shape
    âœ” should have current owner column that is formatted as a refname display name
  intake record default form
    âœ” should be a Field
  intake record plugin
    âœ” should have the correct shape
  intake record messages
    âœ” should contain properties with id and defaultMessage properties
  intake record optionLists
    âœ” should contain properties values and messages
  intake record serviceConfig
    âœ” should have servicePath property
  intake record title
    âœ” should concat the intake entry number and current owner
    âœ” should return the intake entry number when current owner is empty
    âœ” should return the current owner when intake entry number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  loan-in record columns
    âœ” should have correct shape
    âœ” should have lender column that is formatted as a refname display name
  loan-in record default form
    âœ” should be a Field
  loan-in record plugin
    âœ” should have the correct shape
  loan-in record messages
    âœ” should contain properties with id and defaultMessage properties
  loan-in record serviceConfig
    âœ” should have servicePath property
  loan-in record title
    âœ” should concat the loan-in number and lender
    âœ” should return the loan-in number when lender is empty
    âœ” should return the lender when loan-in number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  loanout record columns
    âœ” should have correct shape
    âœ” should have borrower column that is formatted as a refname display name
  loanout record default form
    âœ” should be a Field
  loan-out record plugin
    âœ” should have the correct shape
  loan-out record messages
    âœ” should contain properties with id and defaultMessage properties
  loan-out record serviceConfig
    âœ” should have servicePath property
  loanout record title
    âœ” should concat the loan-out number and borrower
    âœ” should return the loan-out number when borrower is empty
    âœ” should return the borrower when loan-out number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  location record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  location record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
    âœ” should have term status column that is formatted as an option list value
  location record default form
    âœ” should be a Field
  location record plugin
    âœ” should have the correct shape
  location record messages
    âœ” should contain properties with id and defaultMessage properties
  location record optionLists
    âœ” should contain properties values and messages
  location record serviceConfig
    âœ” should have servicePath property
  location record title
    âœ” should return the primary display name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  media record fields
    externalUrl field computation
      âœ” should set the value to the value of the blob's file field
      âœ” should not set the value (should return undefined) if there is no blob data
      âœ” should not set the value (should return undefined) if the blob's file field is not a string
  media record plugin
    blob subrecord save condition
      âœ” should return false for existing records
      âœ” should return true for new records that have a file
      âœ” should return false for new records that do not have a file
      âœ” should return false for new records that have an empty file array
  media record title
    âœ” should concat the identification number and title
    âœ” should return the identificatino number when title is empty
    âœ” should return the title when identification number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  movement record columns
    âœ” should have correct shape
    âœ” should have current location column that is formatted as a refname display name
  movement record title
    âœ” should concat the current location and location date
    âœ” should return the current location when location date is empty
    âœ” should return the location date when current location is empty
    âœ” should return the location date when it does not have a time part
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  object record columns
    âœ” should have correct shape
    âœ” should have docNumber column with the proper shape
    âœ” should have docNumber column that is formatted as a refname display name
    âœ” should have docType column with the proper shape
    âœ” should have docName column that is formatted as a refname display name
    âœ” should have docType column that is formatted as a record type name from a service object name
    âœ” should format the docType column with a fallback if no record type is found for the service object name
    âœ” should have updated column with the proper shape
    âœ” should have updatedAt column that is formatted as a date
  object record plugin
    âœ” should have the correct shape
  object exit record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  object exit record columns
    âœ” should have the correct shape
    âœ” should have current owner column that is formatted as a refname display name
  object exit record default form
    âœ” should be a Field
  object exit record plugin
    âœ” should have the correct shape
  object exit record messages
    âœ” should contain properties with id and defaultMessage properties
  object exit record optionLists
    âœ” should contain properties values and messages
  object exit record serviceConfig
    âœ” should have servicePath property
  object exit record title
    âœ” should concat the exit number and current owner
    âœ” should return the exit number when current owner is empty
    âœ” should return the current owner when exit number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  organization record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  organization record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
    âœ” should have term status column that is formatted as an option list value
  organization record default form
    âœ” should be a Field
  organization record plugin
    âœ” should have the correct shape
  organization record messages
    âœ” should contain properties with id and defaultMessage properties
  place record optionLists
    âœ” should contain properties values and messages
  organization record serviceConfig
    âœ” should have servicePath property
  organization record title
    âœ” should return the primary display name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  person record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
  person record plugin
    âœ” should have the correct shape
  person record title
    âœ” should return the primary display name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  place record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  place record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
    âœ” should have term status column that is formatted as an option list value
  place record default form
    âœ” should be a Field
  place record plugin
    âœ” should have the correct shape
  place record messages
    âœ” should contain properties with id and defaultMessage properties
    âœ” should contain properties values and messages 
  place record serviceConfig
    âœ” should have servicePath property
  place record title
    âœ” should return the primary display name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  pot tag record columns
    âœ” should have the correct shape
    âœ” should have family column that is formatted as a refname display name
    âœ” should have taxonName column that is formatted as a refname display name
    âœ” should have print labels column that is formatted as an option list value
  pottag record default form
    âœ” should be a Field
  pottag record plugin
    âœ” should have the correct shape
  pottag record messages
    âœ” should contain properties with id and defaultMessage properties
  pottag record serviceConfig
    âœ” should have servicePath property
  pot tag record title
    âœ” should concat the common name and family
    âœ” should return the common name when family field is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  procedure record columns
    default column set
      âœ” should have correct shape
      âœ” should have docNumber column with the proper shape
      âœ” should have docNumber column that is formatted as a refname display name
      âœ” should have docName column that is formatted as a refname display name
      âœ” should have docType column with the proper shape
      âœ” should have docType column that is formatted as a record type name from a service object name
      âœ” should format the docType column with a fallback if no record type is found for the service object name
      âœ” should have updatedAt column with the proper shape
      âœ” should have updatedAt column that is formatted as a date
    narrow column set
      âœ” should have docNumber column that is formatted as a refname display name
      âœ” should have docName column that is formatted as a refname display name
  uoc record columns
    âœ” should have correct shape
    âœ” should have authorizedBy column that is formatted as a refname display name
  uoc record default form
    âœ” should be a Field
  uoc record plugin
    âœ” should have the correct shape
  uoc record messages
    âœ” should contain properties with id and defaultMessage properties
  uoc record serviceConfig
    âœ” should have servicePath property
  uoc record title
    âœ” should concat the reference number and title
    âœ” should return the reference number when title is empty
    âœ” should return the title when reference number is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  valuation record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  valuation record columns
    âœ” should have the correct shape
    âœ” should have value type that is formatted as an option list value
  valuation record default form
    âœ” should be a Field
  valuation record plugin
    âœ” should have the correct shape
  valuation record messages
    âœ” should contain properties with id and defaultMessage properties
  valuation record optionLists
    âœ” should contain properties values and messages
  valuation record serviceConfig
    âœ” should have servicePath property
  valuation record title
    âœ” should concat the valuation number and the value type
    âœ” should return the valuation number when the value type is empty
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  work record advanced search
    âœ” should contain a top level property `op`
    âœ” should contain a top level property `value` that is an array
  work record columns
    âœ” should have correct shape
    âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
    âœ” should have term status column that is formatted as an option list value
  work record default form
    âœ” should be a Field
  work record plugin
    âœ” should have the correct shape
  work record messages
    âœ” should contain properties with id and defaultMessage properties
  work record optionLists
    âœ” should contain properties values and messages
  work record serviceConfig
    âœ” should have servicePath property
  work record title
    âœ” should return the primary display name
    âœ” should return empty string if no data is passed
    âœ” should return empty string if the common part is not present
  refs subresource columns
    âœ” should have correct shape
    default column set
      âœ” should have docNumber column that is formatted as a refname display name
      âœ” should have docName column that is formatted as a refname display name
      âœ” should have docType column that is formatted as a record type name from a service object name
      âœ” should have sourceField column that is formatted as a field name from a part and field ids
      âœ” should format the sourceField column with a fallback if no field is found with the id
    narrow column set
      âœ” should have docNumber column that is formatted as a refname display name
      âœ” should have docName column that is formatted as a refname display name
      âœ” should have docType column that is formatted as a record type name from a service object name
      âœ” should have sourceField column that is formatted as a field name from a part and field ids
      âœ” should format the sourceField column with a fallback if no field is found with the id
  terms subresource columns
    âœ” should have correct shape
    âœ” should format the sourceField column with a fallback if no field is found with the id
    default column set
      âœ” should have type column that is formatted as a record type name from a service path in a ref name
      âœ” should format the type column with a fallback if no record type is found with the service path
      âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
      âœ” should format the vocabulary column with a fallback if no record type is found with the service path
      âœ” should format the vocabulary column with a fallback if no vocabulary is found with the short id
      âœ” should have sourceField column that is formatted as a field name from a part and field ids
    narrow column set
      âœ” should have type column that is formatted as a record type name from a service path in a ref name
      âœ” should have vocabulary column that is formatted as a vocabulary name from a short id in a ref name
      âœ” should have sourceField column that is formatted as a field name from a part and field ids
  authority reducer
    âœ” should have an empty immutable initial state
    on AUTH_VOCABS_READ_FULFILLED
      âœ” should set the csid and workflowState for each vocabulary in the payload
      âœ” should do nothing if a response contains no items
    on LOGOUT_FULFILLED
      âœ” should clear all state
    on SET_AUTH_VOCAB_WORKFLOW_STATE
      âœ” should set the workflow state for the given vocabulary
  authz reducer
    âœ” should have an empty immutable initial state
    on PERMS_READ_STARTED
      âœ” should set isPermsReadPending to true
    on PERMS_READ_FULFILLED
      âœ” should set resourceNames to contain known records in the response
      âœ” should unset isPermsReadPending
      âœ” should handle a single (non-list) permission
    on PERMS_READ_REJECTED
      âœ” should unset isPermsReadPending
    on ROLES_READ_STARTED
      âœ” should set isRolesReadPending to true
    on ROLES_READ_FULFILLED
      âœ” should set roles to the roles in the response
      âœ” should unset isRolesReadPending
      âœ” should handle a single (non-list) role
    on ROLES_READ_REJECTED
      âœ” should unset isRolesReadPending
    on RECORD_DELETE_FULFILLED
      âœ” should delete roles if the record type is authrole
      âœ” should not delete roles if the record type is not authrole
    on RECORD_CREATED
      âœ” should delete roles if the record type is authrole
      âœ” should not delete roles if the record type is not authrole
  cspace reducer
    âœ” should have an empty initial state
    âœ” should handle CSPACE_CONFIGURED
  ID generator reducer
    âœ” should have empty immutable initial state
    âœ” should handle ADD_ID_GENERATORS
    âœ” should handle READ_ID_GENERATOR_FULFILLED
    on LOGOUT_FULFILLED
      âœ” should clear samples
  reducer
    âœ” should compose other reducers
    getAuthorityVocabCsid selector
      âœ” should select from the authority key
    getAuthorityVocabWorkflowState selector
      âœ” should select from the authority key
    getAuthzResourceNames selector
      âœ” should select from the authz key
    isAuthzPermsReadPending selector
      âœ” should select from the authz key
    getAuthzRoles selector
      âœ” should select from the authz key
    isAuthzRolesReadPending selector
      âœ” should select from the authz key
    getUserScreenName selector
      âœ” should select from the user key
    getUserPerms selector
      âœ” should select from the user key
    getUserUsername selector
      âœ” should select from the user key
    getLoginUsername selector
      âœ” should select from the login key
    isLoginPending selector
      âœ” should select from the login key
    getLoginError selector
      âœ” should select from the login key
    isLoginSuccess selector
      âœ” should select from the login key
    isLogoutPending selector
      âœ” should select from the logout key
    getLogoutResponse selector
      âœ” should select from the logout key
    getRecordRelationUpdatedTimestamp selector
      âœ” should select from the record key
    getRecordData selector
      âœ” should select from the record key
    getRecordError selector
      âœ” should select from the record key
    getRecordSubrecordCsid selector
      âœ” should select from the record key
    getRecordValidationErrors selector
      âœ” should select from the record key
    getNewRecordData selector
      âœ” should select from the record key
    isRecordModified selector
      âœ” should select from the record key
    isRecordReadPending selector
      âœ” should select from the record key
    isRecordSavePending selector
      âœ” should select from the record key
    isRecordReadVocabularyItemRefsPending selector
      âœ” should select from the record key
    getRelatedRecordBrowserRelatedCsid selector
      âœ” should select from the recordBrowser key
    getPrefs selector
      âœ” should return the prefs key
    isPanelCollapsed selector
      âœ” should select from the prefs key
    getRecordBrowserNavBarItems selector
      âœ” should select from the prefs key
    getSearchPanelPageSize selector
      âœ” should select from the prefs key
    getSearchPageRecordType selector
      âœ” should select from the prefs key
    getSearchPageVocabulary selector
      âœ” should select from the prefs key
    getSearchResultPagePageSize selector
      âœ” should select from the prefs key
    getSearchToRelatePageSize selector
      âœ” should select from the prefs key
    getUploadType selector
      âœ” should select from the prefs key
    getForm selector
      âœ” should select from the prefs key
    getAdminTab selector
      âœ” should select from the prefs key
    getOptionList selector
      âœ” should select from the optionList key
    getVocabulary selector
      âœ” should select from the vocabulary key
    getPartialTermSearchMatches selector
      âœ” should select from the partialTermSearch key
    getIDGenerator selector
      âœ” should select from the idGenerator key
    getSearchPageAdvanced selector
      âœ” should select from the searchPage key
    getSearchPageKeyword selector
      âœ” should select from the searchPage key
    getQuickSearchKeyword selector
      âœ” should select from the quickSearch key
    getQuickSearchRecordType selector
      âœ” should select from the prefs key
    getQuickSearchVocabulary selector
      âœ” should select from the prefs key
    isSearchPending selector
      âœ” should select from the search key
    getSearchState selector
      âœ” should select from the search key
    getMostRecentSearchDescriptor selector
      âœ” should select from the search key
    getSearchResult selector
      âœ” should select from the search key
    getSearchError selector
      âœ” should select from the search key
    getSearchSelectedItems selector
      âœ” should select from the search key
    getRelationFindResult selector
      âœ” should select from the relation key
    getSearchToRelateAdvanced selector
      âœ” should select from the searchToRelate key
    getSearchToRelateKeyword selector
      âœ” should select from the searchToRelate key
    getSearchToRelateRecordType selector
      âœ” should select from the searchToRelate key
    getSearchToRelateVocabulary selector
      âœ” should select from the searchToRelate key
    getNotifications selector
      âœ” should select from the notification key
    getOpenModalName selector
      âœ” should select from the notification key
  login reducer
    âœ” should have an empty immutable initial state
    âœ” should handle RESET_LOGIN
    âœ” should handle LOGIN_STARTED
    âœ” should handle LOGIN_FULFILLED
    âœ” should handle LOGIN_REJECTED
  logout reducer
    âœ” should have an empty initial state
    âœ” should handle LOGOUT_STARTED
    âœ” should handle LOGOUT_FULFILLED
  notification reducer
    âœ” should have immutable map initial state with notifications key
    âœ” should handle SHOW_NOTIFICATION
    âœ” should generate a notification ID when a SHOW_NOTIFICATION action does not provide one
    âœ” should handle REMOVE_NOTIFICATION
    âœ” should handle OPEN_MODAL
    âœ” should handle CLOSE_MODAL
  optionList reducer
    âœ” should have an empty initial state
    âœ” should handle ADD_OPTION_LISTS
  partialTermSearch reducer
    âœ” should have an empty Immutable initial state
    âœ” should handle ADD_TERM_STARTED
    âœ” should handle ADD_TERM_FULFILLED
    âœ” should handle ADD_TERM_REJECTED
    âœ” should handle PARTIAL_TERM_SEARCH_STARTED
    âœ” should handle PARTIAL_TERM_SEARCH_FULFILLED
    âœ” should set items to empty array if search result count is zero
    âœ” should set items to an array if one list item is returned
    âœ” should handle PARTIAL_TERM_SEARCH_REJECTED
    âœ” should handle CLEAR_PARTIAL_TERM_SEARCH_RESULTS
  prefs reducer
    âœ” should have empty immutable initial state
    âœ” should handle COLLAPSE_PANEL
    âœ” should handle SET_ADMIN_TAB
    âœ” should handle SET_FORM
    âœ” should handle SET_RECORD_BROWSER_NAV_BAR_ITEMS
    âœ” should handle SET_SEARCH_PAGE_ADVANCED
    âœ” should handle SET_SEARCH_TO_RELATE_ADVANCED
    âœ” should handle SET_SEARCH_PAGE_RECORD_TYPE
    âœ” should handle SET_SEARCH_PAGE_VOCABULARY
    âœ” should handle SET_QUICK_SEARCH_RECORD_TYPE
    âœ” should handle SET_QUICK_SEARCH_VOCABULARY
    âœ” should handle SET_SEARCH_RESULT_PAGE_PAGE_SIZE
    âœ” should handle SET_SEARCH_PANEL_PAGE_SIZE
    âœ” should handle SET_SEARCH_TO_RELATE_PAGE_SIZE
    âœ” should handle SET_UPLOAD_TYPE
    âœ” should handle PREFS_LOADED
    âœ” should handle TOGGLE_RECORD_SIDEBAR
    âœ” should handle SET_STICKY_FIELDS
  quick search reducer
    âœ” should have an empty immutable initial state
    âœ” should handle SET_QUICK_SEARCH_KEYWORD
  record reducer
    âœ” should have empty immutable initial state
    âœ” should handle ADD_FIELD_INSTANCE
    âœ” should handle DELETE_FIELD_VALUE
    âœ” should handle MOVE_FIELD_VALUE
    âœ” should handle SET_FIELD_VALUE
    âœ” should handle RECORD_READ_STARTED
    âœ” should handle RECORD_READ_FULFILLED
    âœ” should handle RECORD_READ_REJECTED
    âœ” should handle RECORD_SAVE_STARTED
    âœ” should handle RECORD_SAVE_REJECTED
    âœ” should handle REVERT_RECORD
    âœ” should handle REVERT_RECORD when subrecord csid fields are present
    âœ” should handle SUBJECT_RELATIONS_UPDATED
    âœ” should handle CREATE_ID_FULFILLED
    âœ” should handle VALIDATION_PASSED
    âœ” should handle VALIDATION_FAILED
    âœ” should handle RECORD_TRANSITION_STARTED
    âœ” should handle RECORD_TRANSITION_REJECTED
    âœ” should handle RECORD_CREATED
    âœ” should handle CREATE_NEW_SUBRECORD
    âœ” should handle DETACH_SUBRECORD
    âœ” should handle SUBRECORD_CREATED
    âœ” should handle SUBRECORD_CREATED with a csidField
    âœ” should handle SUBRECORD_CREATED with a csidField where isDefault is true
    âœ” should handle SUBRECORD_READ_FULFILLED
    âœ” should detect subrecord modifications
    âœ” should handle LOGOUT_FULFILLED
    on SORT_FIELD_INSTANCES
      âœ” should sort the list
      âœ” should sort the list by the specified subfield
      âœ” should not change state if there is no data
    on CREATE_NEW_RECORD
      âœ” should create new record data when there is no existing new record data
      âœ” should create new record data when there is existing new record data
      âœ” should copy data from another record when a cloneCsid is supplied
      âœ” should create new subrecord data
      âœ” should create new subrecord data for a subrecord referenced by a csid field
      âœ” should copy the csid in a subrecord csid field from a cloned record
      âœ” should copy sticky field values into new record data when supplied
    on RECORD_SAVE_FULFILLED
      âœ” should set the record data from the payload when there is no existing record data
      âœ” should set the record data from the payload when there is existing record data
      âœ” should update the relation updated timestamp of a related subject
      âœ” should clear all record state except for the saved record, subrecords of the saved record, new unsaved records, and records with pending saves
    on RECORD_TRANSITION_FULFILLED
      âœ” should delete isSavePending on any transition
      âœ” should remove the record state on a delete transition
      âœ” should update the record data on a non-delete transition
      âœ” should update relationUpdatedTime if a relatedSubjectCsid is present
      âœ” should clear all record state on a delete transition, except for records with pending saves
    on LOGIN_FULFILLED
      âœ” should clear all record state if the previous username is different than the new username
      âœ” should not clear record state if the previous username is the same as the new username
    on FIELD_COMPUTE_FULFILLED
      âœ” should merge the computed data into the current data
      âœ” should do nothing if there is no current data
      âœ” should do nothing if the computed value path is not empty
    on RECORD_DELETE_STARTED
      âœ” should set isSavePending to true
    on RECORD_DELETE_FULFILLED
      âœ” should remove state associated with the deleted csid
      âœ” should update relationUpdatedTime of a related record
    on RECORD_DELETE_REJECTED
      âœ” should unset isSavePending
    on CLEAR_RECORD
      âœ” should delete record state for the csid
      âœ” should clear state for any subrecords
      âœ” should do nothing if there is no state for the csid
    on READ_VOCABULARY_ITEM_REFS_STARTED
      âœ” should set isReadVocabularyItemRefsPending to true
    on READ_VOCABULARY_ITEM_REFS_REJECTED
      âœ” should delete isReadVocabularyItemRefsPending
      âœ” should merge referenced states into baseline and current data
      âœ” should handle single (non-list) items
      âœ” should delete isReadVocabularyItemRefsPending and set the error
    isModifiedExceptPart
      âœ” should return false if no data exists for the csid
      âœ” should return false if current data is referentially equal to baseline data
      âœ” should return false if current document is referentially equal to baseline document
      âœ” should return false if no part in the current document is referentially not equal to a part in the baseline document
      âœ” should return true if the a part other than the excepted part in the current document is referentially not equal to a part in the baseline document
      âœ” should return false if the only part in the current document is referentially not equal to a part in the baseline document is the excepted part
      âœ” should return true if a subrecord has been modified
  record browser reducer
    âœ” should have an empty immutable initial state
    âœ” should handle SET_RELATED_RECORD_BROWSER_RELATED_CSID
    âœ” should handle CLEAR_RELATED_RECORD_BROWSER_RELATED_CSID
  record page reducer
    âœ” should have an empty immutable initial state
    âœ” should handle SET_RECORD_PAGE_PRIMARY_CSID
  relation reducer
    âœ” should have an empty immutable initial state
    âœ” should handle CLEAR_RELATION_STATE
    âœ” should handle RELATION_FIND_FULFILLED
    âœ” should handle SUBJECT_RELATIONS_UPDATED
  search reducer
    âœ” should have immutable initial state
    âœ” should handle SEARCH_STARTED
    âœ” should clear all search states on SEARCH_STARTED when the new search is not only a page change
    âœ” should seed the search result on SEARCH_STARTED when the new search is only a page change
    âœ” should seed the search result on SEARCH_STARTED when the new search is only a sort change
    âœ” should seed the search result on SEARCH_STARTED when the new search is only a seq id change
    âœ” should handle SET_MOST_RECENT_SEARCH
    âœ” should not change state on SET_MOST_RECENT_SEARCH if the specified key does not exist
    âœ” should handle SEARCH_FULFILLED
    âœ” should handle SEARCH_FULFILLED when a single item is found
    âœ” should not change state on SEARCH_FULFILLED for an unknown search descriptor
    âœ” should handle SEARCH_REJECTED
    âœ” should not change state on SEARCH_REJECTED for an unknown search descriptor
    âœ” should handle CLEAR_SEARCH_RESULTS
    âœ” should handle CREATE_EMPTY_SEARCH_RESULT
    âœ” should handle SET_RESULT_ITEM_SELECTED
    âœ” should handle CLEAR_SELECTED
    âœ” should handle DESELECT_RESULT_ITEM
    âœ” should handle SET_ALL_RESULT_ITEMS_SELECTED
    âœ” should handle SUBRECORD_CREATED
    âœ” should handle RECORD_DELETE_FULFILLED
    âœ” should handle RECORD_TRANSITION_FULFILLED
    âœ” should handle LOGOUT_FULFILLED
    on RECORD_SAVE_FULFILLED
      âœ” should clear all search state except for search result page, report panel, and batch panel
      âœ” should mark search result page results as dirty
    on LOGIN_FULFILLED
      âœ” should clear all search state when the previous username is not the same as the new username
      âœ” should not clear search state if the previous username is the same as the new username
    on BATCH_INVOKE_FULFILLED
      âœ” should clear all search state when any records were affected
      âœ” should not clear search state if no records were affected
  search page reducer
    âœ” should have an empty immutable initial state
    âœ” should handle SET_SEARCH_PAGE_ADVANCED
    âœ” should handle SET_SEARCH_PAGE_KEYWORD
    âœ” should delete advanced search condition on SET_SEARCH_PAGE_RECORD_TYPE
    âœ” should handle CLEAR_SEARCH_PAGE
  search to relate reducer
    âœ” should have empty immutable initial state
    âœ” should handle SET_SEARCH_TO_RELATE_RECORD_TYPE
    âœ” should handle SET_SEARCH_TO_RELATE_VOCABULARY
    âœ” should handle SET_SEARCH_TO_RELATE_ADVANCED
    âœ” should handle SET_SEARCH_TO_RELATE_KEYWORD
    âœ” should handle CLEAR_SEARCH_TO_RELATE
  user reducer
    âœ” should have empty immutable initial state
    âœ” should handle CSPACE_CONFIGURED
    âœ” should handle ACCOUNT_PERMS_READ_FULFILLED
    âœ” should handle AUTH_RENEW_FULFILLED
    âœ” should handle LOGIN_FULFILLED
    âœ” should handle LOGOUT_FULFILLED
    âœ” should handle SET_ACCOUNT_PERMS
  vocabulary reducer
    âœ” should have an empty initial state
    âœ” should handle READ_VOCABULARY_ITEMS_STARTED
    âœ” should handle READ_VOCABULARY_ITEMS_FULFILLED
    âœ” should handle READ_VOCABULARY_ITEMS_REJECTED
    âœ” should handle LOGOUT_FULFILLED
    on RECORD_SAVE_FULFILLED
      âœ” should clear all state if the saved record is a vocabulary
      âœ” should not change the state if the saved record is not a vocabulary
    on LOGIN_FULFILLED
      âœ” should clear vocabulary state if the user has changed
      âœ” should not clear vocabulary state if the user has not changed

Finished in 45.224 secs / 42.025 secs @ 10:48:31 GMT-0700 (Pacific Daylight Time)

SUMMARY:
âœ” 2229 tests completed
âœ– 1 test failed

FAILED TESTS:
  ReportingPage
    âœ– should update the search descriptor's sequence ID when a record is saved in the record editor
      Chrome 73.0.3683 (Mac OS X 10.14.0)
    TypeError: recordEditor.props.onRecordSaved is not a function
        at Context.test (webpack:///test/specs/components/pages/ReportingPage.spec.jsx:227 <- test/specs/index.js:475483:24)

